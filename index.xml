<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>StarWhisper</title>
        <link>https://blog.frostmiku.com/</link>
        <description>Recent content on StarWhisper</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 13 Oct 2021 11:12:26 +0800</lastBuildDate><atom:link href="https://blog.frostmiku.com/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>使 macOS 的光标像 windows 一样移动</title>
        <link>https://blog.frostmiku.com/archives/42/</link>
        <pubDate>Wed, 13 Oct 2021 11:12:26 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/42/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/42/title.jpg" alt="Featured image of post 使 macOS 的光标像 windows 一样移动" /&gt;&lt;p&gt;如果你同时在使用 Windows 和 mac OS，你可能会发现，mac OS 上的鼠标用起来有点怪异。&lt;/p&gt;
&lt;p&gt;这是因为 mac OS 上的光标加速特性导致的，简单来说就是：&lt;/p&gt;
&lt;p&gt;如果鼠标移动的慢，那么用户可能是想进行精密的指针操作，指针慢一点。
如果鼠标移动的快，那么用户可能是想快速转移光标位置，指针就快一点。&lt;/p&gt;
&lt;p&gt;这个设计的初衷是为了让人们更容易地实现对光标的精密操作，使鼠标更易于上手。&lt;/p&gt;
&lt;p&gt;但非定长移动的光标，在降低了上手难度的同时，也降低了鼠标操作的上限，由于光标移动距离存在不确定性，难以完成一些专业操作，特别是在游戏领域（例如 FPS 中的甩狙操作）中鼠标的手感稀烂。&lt;/p&gt;
&lt;p&gt;如果你有 串流、游戏 需求或是 Windows 老用户，可以考虑关闭光标加速功能，来解决这个问题。&lt;/p&gt;
&lt;p&gt;不过 mac OS 没有为这项设置提供 UI 界面，需要使用命令行进行设定。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;defaults write .GlobalPreferences com.apple.mouse.scaling -1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;上面&lt;/strong&gt;这条指令可以完全关闭光标加速功能，你也可以将 &lt;code&gt;-1&lt;/code&gt; 修改为其他值来自行调节光标加速效果。&lt;/p&gt;
&lt;p&gt;需要注意的是当你通过第三方驱动更改了鼠标的 DPI 数值以后，加速度的数值会自动重置。需要再次使用指令进行设置。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>玄学BUG（一）</title>
        <link>https://blog.frostmiku.com/archives/38/</link>
        <pubDate>Wed, 07 Jul 2021 20:57:44 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/38/</guid>
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;计划开一个不定期更新的栏目来分享一下我一段时间内遇到的玄学 BUG&lt;br&gt;
在本栏目里我会写明导致 BUG 的原因与解决办法，或是提出猜想。如果你在哪条连猜想都没看到，那说明我直接放弃了（&lt;br&gt;
先开一期试试水&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;中文域名重定向过多&#34;&gt;中文域名重定向过多&lt;/h2&gt;
&lt;p&gt;前不久朋友找我做个官网，用的 wordpress&lt;br&gt;
域名是中文域名，网址大概长这个样子： www.中文域名.com&lt;br&gt;
&lt;del&gt;用这么怪的域名是因为他的拼音域名被抢注了&lt;/del&gt;&lt;br&gt;
wordpress 后台绑定域名后一切正常（坑就坑在这里，导致我一开始完全没去想是域名的问题），然而当我把&lt;strong&gt;任意page&lt;/strong&gt;设置为首页后，网站进不去，报重定向过多。&lt;/p&gt;
&lt;p&gt;猜测是因为中文域名本质上是被 Punycode 编码的 www.xn-xxxxxxxxxx(一堆乱码).com&lt;br&gt;
wordpress 魔幻的将其与后台绑定的未经转码的 www.中文域名.com 进行了 &lt;code&gt;==&lt;/code&gt; 运算，发现不一致，就重定向，然后&amp;hellip;就循环了,囧rz&amp;hellip;&lt;br&gt;
我最后给中文域名301到英文域名上凑合着用了（&lt;/p&gt;
&lt;h2 id=&#34;主题在-chrome-和-safari-上表现不一致&#34;&gt;主题在 Chrome 和 Safari 上表现不一致&lt;/h2&gt;
&lt;p&gt;前几天换上的 HUGO stack 主题，结果在 Safari 上显示有 BUG&lt;br&gt;
如果你现在使用的是低于 14.1 版本的 Safari 浏览本 Blog 应该明白我指是的什么&lt;/p&gt;
&lt;p&gt;这是因为 Safari 在 14.1 之后的版本上才支持CSS属性 &lt;code&gt;column-gap&lt;/code&gt; 在 &lt;code&gt;flex&lt;/code&gt; 布局中使用&lt;br&gt;
详细讨论见 &lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack/issues/249&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;此 Issue&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;hugo-不显示刚写好的文章&#34;&gt;HUGO 不显示刚写好的文章&lt;/h2&gt;
&lt;p&gt;这是因为 HUGO 使用的是 UTC 时间，以本地时间写好的文章对于 HUGO 来说是来自未来的 （&lt;/p&gt;
&lt;p&gt;解决办法两个：&lt;br&gt;
1.在 config 里加上&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;buildfuture&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;编译未来的文件&lt;/p&gt;
&lt;p&gt;2.在日期中加上时区&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;nt&#34;&gt;date&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;2021-07-07T20:57:44+08:00&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;这条题目不知叫啥好&#34;&gt;这条题目不知叫啥好&lt;/h2&gt;
&lt;p&gt;写 TypeScript 的时候用到了 Web Serial API&lt;br&gt;
这个 API 只有 Chrome 支持，所以 TypeScript 不认，在引入 &lt;code&gt;.d.ts&lt;/code&gt; 之前我手贱点了快速修复，导致 &lt;code&gt;serial&lt;/code&gt; 类型变成了 Any&lt;br&gt;
引入 &lt;code&gt;.d.ts&lt;/code&gt; 文件后也变不回来了，囧（&lt;/p&gt;
&lt;p&gt;最终发现 &lt;code&gt;serial&lt;/code&gt; 的类型是被声明在了&lt;br&gt;
&lt;code&gt;C:\Users\username\AppData\Local\Programs\Microsoft VS Code\resources\app\extensions\node_modules\typescript\lib\lib.dom.d.ts&lt;/code&gt;&lt;br&gt;
中&lt;/p&gt;
&lt;h2 id=&#34;qbittorrent-web-ui-账号密码不正确&#34;&gt;qBittorrent Web UI 账号密码不正确&lt;/h2&gt;
&lt;p&gt;首先，账号和密码是在 &lt;code&gt;~/.config/qBittorrent/qBittorrent.conf&lt;/code&gt; 里的&lt;br&gt;
然后我试了一个小时，确定我密码没问题，可就是进不去&lt;br&gt;
最后我无意间在网上看到了&lt;br&gt;
&lt;figure style=&#34;flex-grow: 140; flex-basis: 338px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/38/qBittorrentBUG.jpg&#34; data-size=&#34;1154x819&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/38/qBittorrentBUG.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/38/qBittorrentBUG_hu65de2c5e01a29d7506507d6f2bc66bc3_63751_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/38/qBittorrentBUG_hu65de2c5e01a29d7506507d6f2bc66bc3_63751_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;1154&#34;
				height=&#34;819&#34;
				loading=&#34;lazy&#34;
				alt=&#34;我不懂，但我大受震撼&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;我不懂，但我大受震撼&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;未知&#34;&gt;未知&lt;/h2&gt;
&lt;p&gt;这里本来要记录一条非常玄学的 BUG ，但是我现在怎么都想不起来是什么，某种意义上这十分的玄学&amp;hellip;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>基于肢体运动的睡眠状态检测原理</title>
        <link>https://blog.frostmiku.com/archives/36/</link>
        <pubDate>Wed, 30 Jun 2021 15:22:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/36/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/36/3.jpg" alt="Featured image of post 基于肢体运动的睡眠状态检测原理" /&gt;&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;  睡眠，作为人类每天都要进行的一项活动，它占据了人类整个生命周期的三分之一左右，其质量的高低对人类身心健康有着巨大的影响。&lt;/p&gt;
&lt;p&gt;  良好的睡眠质量有助于身体成长、提高大脑记忆能力、增强自身免疫力，同时有利于集中注意力，保证各方面均衡发展，是健康的基本保证。然而，现如今的年轻人或是因为繁重的学习生活压力，或是因为精彩缤纷的互联网世界，熬夜成瘾，久久无法入眠。&lt;/p&gt;
&lt;p&gt;  来自洛阳市精神卫生中心的调查显示大部分学生能够认识到睡眠质量与学习、工作的直接关联，也非常重视自身的睡眠质量，但是却没有为改善自己的睡眠质量做出过努力&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;  据报告，在美国，有15%至60%的严重交通事故是由睡眠问题所造成的&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;，因睡眠问题导致的各类财务损失超过几百亿美金&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;  睡眠质量的高低与人类健康息息相关，较差的睡眠质量会导致情绪低落、注意力涣散、反应迟钝、免疫力下降等症状，严重情况下，熬夜者很可能会有猝死的风险。&lt;/p&gt;
&lt;p&gt;  近年来，随着物质生活水平的不断提高，人们的健康意识逐渐增强，对人生三分之一都在进行的大事——“睡眠”自然也是十分关注。&lt;/p&gt;
&lt;p&gt;  随着对睡眠的医学研究全面深入，和传感器技术的飞速发展，为人们优化自己的睡眠质量提供了新的可能。&lt;/p&gt;
&lt;p&gt;  睡眠质量的高低与人类健康息息相关，较差的睡眠质量通常会导致许多疾病的发病率升高，严重情况下，熬夜者很可能会有猝死的风险。通常我们可以依据睡眠者起床时的精神面貌来评判睡眠质量的高低，而睡眠者被唤醒的时机是影响起床时精神面貌的关键因素之一。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 192; flex-basis: 461px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/36/1.png&#34; data-size=&#34;728x379&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/36/1.png&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/36/1_hu8a7a4e96fac6f0db296b54f74841bcba_27179_480x0_resize_box_3.png 480w, https://blog.frostmiku.com/archives/36/1_hu8a7a4e96fac6f0db296b54f74841bcba_27179_1024x0_resize_box_3.png 1024w&#34;
				width=&#34;728&#34;
				height=&#34;379&#34;
				loading=&#34;lazy&#34;
				alt=&#34;图 1 睡眠样本&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;图 1 睡眠样本&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;  如图1所示，医学界通常认为睡眠过程是一个由快速动眼期(REM)和非快速动眼期(NREM)两大时序状态组成的循环过程，其中，非快速动眼期阶段又可以细化为以下四个睡眠子阶段：第一、二阶段统称为浅睡眠过程(Light Sleep)，第三、四阶段统称为深睡眠过程(Deep Sleep)&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;。当睡眠者在深睡眠过程中被外界因素唤醒时，将会产生梦中惊醒的效果，睡眠者的精神面貌也必不会有多好。然而，当睡眠者在浅度睡眠时受外界因素被唤醒时，则会表现出自然睡醒一样的效果&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h2 id=&#34;睡眠周期及睡眠状态检测原理&#34;&gt;睡眠周期及睡眠状态检测原理&lt;/h2&gt;
&lt;h3 id=&#34;睡眠周期&#34;&gt;睡眠周期&lt;/h3&gt;
&lt;p&gt;  人类的睡眠存在一个生物节律，即大约在90到100分钟的时间内，经历五个不同阶段的周期，国际睡眠医学将睡眠阶段分为五期：入睡期、浅睡期、熟睡期、深睡期和快速动眼期。&lt;/p&gt;
&lt;p&gt;  入睡期是睡眠的开始，昏昏欲睡的感觉就属于这一阶段。浅睡期开始正式睡眠。熟睡期和沉睡期是沉睡阶段，在该阶段人不容易被叫醒。当睡眠者由浅睡期或快速动眼期逐步进入沉睡期时，睡眠者的呼吸频率和心跳速度均会减慢且变得有节奏，其血压也会降低。与此同时，脑电波开始变慢并且会呈现出大量高幅值的波段&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;  以上四个阶段睡眠共要经过约60到90分钟。而且均不会出现眼球快速跳动现象，故统称为非快速动眼睡眠。&lt;/p&gt;
&lt;p&gt;  最后一个时期被称为快速动眼期。顾名思义，此时的睡眠者会出现动眼现象，此时的睡眠者通常会有翻身的动作，并且容易惊醒。科学研究表明，快速动眼期是大脑内部对记忆的学习和技巧的快速整合阶段。这一阶段的睡眠质量直接决定了睡眠者的记忆和理解效率，是非常重要的睡眠阶段&lt;sup id=&#34;fnref:7&#34;&gt;&lt;a href=&#34;#fn:7&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;。所以保证足够的睡眠时间是非常重要的。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 201; flex-basis: 482px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/36/2.jpg&#34; data-size=&#34;324x161&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/36/2.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/36/2_hu1e7f476a967c2bff218d6463f4f91e9b_14181_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/36/2_hu1e7f476a967c2bff218d6463f4f91e9b_14181_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;324&#34;
				height=&#34;161&#34;
				loading=&#34;lazy&#34;
				alt=&#34;图 2 睡眠过程状态迁移图&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;图 2 睡眠过程状态迁移图&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;  睡眠周期是由睡眠刚启动的昏昏欲睡逐渐变沉，经由非快速动眼期（慢波睡眠期）和快速动眼期（异相睡眠期），这几个睡眠阶段之间的往复循环。又称为短昼夜睡眠周期，睡梦周期或快速动眼—非快速动眼(REM-NREM)周期，以示区别于睡眠和清醒间的昼夜交替。如图1所示人类的睡眠周期约70至110分钟（90±20分钟）&lt;sup id=&#34;fnref:8&#34;&gt;&lt;a href=&#34;#fn:8&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;8&lt;/a&gt;&lt;/sup&gt;。医学上又可以将睡眠细粒度地分为如图2所示的五个阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一阶段(S1)也是非快速动眼期第一阶段，是睡眠的最初状态，也是睡眠者由清醒逐渐进入到浅睡眠状态的过程。睡眠者在该阶段通常会出现突然地肌肉颤动，容易受到外部环境的干扰。&lt;/li&gt;
&lt;li&gt;第二阶段(S2)是相较于第一阶段(S1)更深程度的睡眠阶段。但其仍然属于浅睡眠阶段。在该阶段中，睡眠者身体温度开始下降，并且心率开始减慢。这个阶段通常持续约20分钟左右，是睡眠者从浅睡眠进入深睡眠的过程。&lt;/li&gt;
&lt;li&gt;第三阶段(S3)是睡眠者进入深睡眠阶段中的第一阶段。睡眠者的血压开始降低，呼吸频率进一步减慢，与此同时，身体体温再次下降，变得更低。睡眠者在该阶段很少出现身体运动。如果此时将睡眠者唤醒，那么他/她的精神面貌将会很差，并且容易导致注意力不集中等症状。&lt;/li&gt;
&lt;li&gt;第四阶段(S4)是深睡眠过程中的第二个阶段，也是整个过程中睡眠程度最深的阶段。是深睡眠过程中的第二个阶段，也是整个过程中睡眠程度最深的阶段。该阶段持续大约30分钟。&lt;/li&gt;
&lt;li&gt;第五阶段(S5)是快速动眼期(REM), 也是整个睡眠过程中睡眠者脑部活动最为活跃的阶段。在此阶段中，睡眠者的脑电波通常很快且变化迅速，形状与清醒状态下相类似&lt;sup id=&#34;fnref:9&#34;&gt;&lt;a href=&#34;#fn:9&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;9&lt;/a&gt;&lt;/sup&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;通过肢体运动检测睡眠状态&#34;&gt;通过肢体运动检测睡眠状态&lt;/h3&gt;
&lt;p&gt;  在不同的睡眠阶段，睡眠者通常会表现出不同的肢体运动行为。从医学角度看, 在浅睡眠阶段，睡眠者的心跳频率通常较快，从而容易导致较大的身体动作，比如翻身等现象。相反，一些微小的身体动作经常会发生在深睡眠阶段。此外，在快速动眼期，睡眠者脑电波处于较为活跃的状态，在该阶段睡眠者多梦，由此会引发一些无意识的身体动作，手臂拉伸、腿部伸展等肢体活动经常发生于该阶段。因此给通过肢体运动行为进行睡眠者睡眠状态推测提供了依据。&lt;/p&gt;
&lt;p&gt;  在图2中的S1阶段中睡眠者的眼部运动和身体肌肉运动开始减少，逐步进入休息状态。睡眠者在该阶段通常会出现突然地肌肉颤动，容易受到外部环境的干扰，之后的几个阶段中肢体动作依次递减。直至S5阶段睡眠者的呼吸速度开始加快，变得不规律。与此同时，睡眠者在此阶段通常多梦，其眼部运动开始加剧，嘴部及肌肉活动变得频繁起来。&lt;/p&gt;
&lt;p&gt;  在一次正常的睡眠过程中，睡眠者通常会由浅睡眠阶段变换至深睡眠阶段，接着并不直接进入快速动眼期，而是从深度睡眠逆向回到浅度睡眠，之后才进入快速动眼期。快速动眼期结束后，接着再进入S1阶段，如此周而复始。睡眠过程中的状态变换在时间上呈现出周期性规律，不同睡眠状态之间的切换也具有一定的依赖性与时序性。一次完整的睡眠状态周期大约会持续90分钟，并且一晚上大约循环4到6次。&lt;/p&gt;
&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;p&gt;  这部分我就不放出来了，基本就是拿到加速度传感器三轴的值然后归一化，然后进行识别，马尔科夫链或是条件随机场都是很好的方法，当然我更推荐后者，因为前者认为所有显式状态是彼此独立的，在建模中并不考虑他们之间的依赖关系。考虑到睡眠过程中各个睡眠相关事件的相互依赖性，相比于隐式马尔科夫链，条件随机场能够描述更多特征，从而达到更好地预测效果。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 205; flex-basis: 492px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/36/4.jpg&#34; data-size=&#34;1659x808&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/36/4.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/36/4_huc862200047d2791ebe78021e5f3bf473_68674_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/36/4_huc862200047d2791ebe78021e5f3bf473_68674_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;1659&#34;
				height=&#34;808&#34;
				loading=&#34;lazy&#34;
				alt=&#34;数据处理&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;数据处理&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;而我为了混个毕业就直接有限状态机解决问题了。&lt;del&gt;差不多得了&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 189; flex-basis: 454px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/36/3.jpg&#34; data-size=&#34;1605x848&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/36/3.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/36/3_hu5f6040234dc4fded8a5d093800e3042d_106071_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/36/3_hu5f6040234dc4fded8a5d093800e3042d_106071_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;1605&#34;
				height=&#34;848&#34;
				loading=&#34;lazy&#34;
				alt=&#34;总体架构&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;总体架构&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;郑伟,赵静霞. 117例大学生睡眠状态调查[A].河南省精神病学学术年会资料汇编[C]. 河南:河南省护理学会, 2006:2-3.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Sleep-deprived driving. Technical report[EB/OL], 2005. &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Sleep-deprived_driving#cite_note-CNN-5&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/Sleep-deprived_driving#cite_note-CNN-5&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Hillman D R, Murphy A S, Antic R, et al. The economic cost of sleep disorders[J]. Sleep, 2006, 29(3):299-305.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Längkvist M, Karlsson L, Loutfi A. Sleep stage classification using unsupervised feature learning[J]. Advances in Artificial Neural Systems, 2012, 32(5):5-7.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:5&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Trinder J, Kleiman J, Carrington M, et al. Autonomic activity during human sleep as a function of time and sleep stage[J]. Journal of sleep research, 2001, 10(4): 253-264.&amp;#160;&lt;a href=&#34;#fnref:5&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:6&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Weixi Gu, Longfei Shangguan, Zheng Yang, et al.Sleep Hunter: Towards Fine Grained Sleep Stage Tracking with Smartphones[J]. IEEE Transactions on Mobile Computing, 2016, 20(15):1514-1527&amp;#160;&lt;a href=&#34;#fnref:6&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:7&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Ancoli-Israel S, Cole R, Alessi C, et al. The role of actigraphy in the study of sleep and circadian rhythms[J]. Sleep, 2003, 26(3): 342-392.&amp;#160;&lt;a href=&#34;#fnref:7&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:8&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;维基. 睡眠周期[EB/OL], &lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/wiki/%E7%9D%A1%E7%9C%A0%E9%80%B1%E6%9C%9F,&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zh.wikipedia.org/wiki/%E7%9D%A1%E7%9C%A0%E9%80%B1%E6%9C%9F,&lt;/a&gt; 2021-04-05&amp;#160;&lt;a href=&#34;#fnref:8&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:9&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;顾维玺. 基于移动感知技术的睡眠状态追踪研究[D]. 北京: 清华大学,2015.&amp;#160;&lt;a href=&#34;#fnref:9&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
        </item>
        <item>
        <title>仿手写文本生成</title>
        <link>https://blog.frostmiku.com/archives/35/</link>
        <pubDate>Tue, 29 Jun 2021 21:52:28 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/35/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/35/after.jpg" alt="Featured image of post 仿手写文本生成" /&gt;&lt;p&gt;事情的起因是这样的&amp;hellip;&lt;br&gt;
当年正是疫情最为严峻的时候，学校决定网上开学（&lt;del&gt;云上课&lt;/del&gt;）&lt;br&gt;
那么开学了，就得写作业 &lt;del&gt;淦&lt;/del&gt;&lt;br&gt;
其中有一门毛中特，&lt;del&gt;老师比较有想法&lt;/del&gt;，作业不收电子版，要求手写拍照提交&lt;br&gt;
那我作为一个键盘侠，面对这么抗拒时代洪流的做法当然是不同意的呀！&lt;/p&gt;
&lt;p&gt;于是我上网搜索了一番，搜出来了&lt;a class=&#34;link&#34; href=&#34;https://www.zhihu.com/question/20308770/answer/241699602&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这么个玩意&lt;/a&gt;&lt;br&gt;
&lt;del&gt;淦，今天写文章时才发现他也是为了对付毛概&lt;/del&gt;&lt;br&gt;
有一说一，如果不用交给老师的话效果还真不错&lt;br&gt;
但拿来交作业的话，老师找两个一样的字一对比，直接喜提零分回家了（&lt;/p&gt;
&lt;p&gt;于是我在想，能不能给每个字加入随机扰动&lt;br&gt;
结果还真让我找到了一个叫 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gsllchb/Handright/blob/master/docs/tutorial.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;handright&lt;/a&gt; 的 Python 包&lt;br&gt;
接下来就是无聊的调参过程了，最终效果如下：&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 172; flex-basis: 414px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/35/%E6%95%88%E6%9E%9C.jpg&#34; data-size=&#34;176x102&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/35/%E6%95%88%E6%9E%9C.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/35/%E6%95%88%E6%9E%9C_huedaf81cb7fb6bc60d3915303690c6dfd_3596_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/35/%E6%95%88%E6%9E%9C_huedaf81cb7fb6bc60d3915303690c6dfd_3596_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;176&#34;
				height=&#34;102&#34;
				loading=&#34;lazy&#34;
				alt=&#34;效果&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;效果&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为生成的是位图，所以一放大就会发现锯齿&lt;br&gt;
按理说应该搞个抗锯齿的，然而马上就要收作业了&lt;br&gt;
我选择用 HiDPI 的方法应付一下得了（&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 70; flex-basis: 169px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/35/before.jpg&#34; data-size=&#34;757x1071&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/35/before.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/35/before_hu63dff8c9202fdee1b0c8db1c0b96e0d2_74622_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/35/before_hu63dff8c9202fdee1b0c8db1c0b96e0d2_74622_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;757&#34;
				height=&#34;1071&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Before&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Before&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure style=&#34;flex-grow: 70; flex-basis: 169px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/35/after.jpg&#34; data-size=&#34;757x1069&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/35/after.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/35/after_hu23b7e7c62fd8951b5b31d4f97802b41e_155221_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/35/after_hu23b7e7c62fd8951b5b31d4f97802b41e_155221_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;757&#34;
				height=&#34;1069&#34;
				loading=&#34;lazy&#34;
				alt=&#34;After&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;After&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;先生成一张高分辨率的图，然后再手动缩小&lt;br&gt;
然后使用 &lt;strong&gt;QQ 截图&lt;/strong&gt;！如果效果还不好的话，就压缩一下，把图片弄糊&lt;br&gt;
&lt;del&gt;或者换个不会放大图片的老师&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;也不知道这玩意拿来打印效果怎么样（&lt;/p&gt;
&lt;p&gt;项目已在 GitHub 上开源：&lt;a class=&#34;link&#34; href=&#34;https://github.com/FrostMiKu/FakeHandwriting&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;传送门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ps: 这项目收到18元赞助，拿去 CSGO 开了个箱子，变成了破铜烂铁（&lt;/p&gt;
</description>
        </item>
        <item>
        <title>大革命，一种扑克卡牌游戏</title>
        <link>https://blog.frostmiku.com/archives/34/</link>
        <pubDate>Fri, 09 Apr 2021 17:55:35 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/34/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/34/Game51.jpg" alt="Featured image of post 大革命，一种扑克卡牌游戏" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近接触了一种名叫“大富豪”(译名之一)的传统日式扑克牌游戏，国内好像知者甚少，故在此分享。&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;“大富豪”是一种类似我国斗地主规则的扑克游戏，游戏擅长以大逆转来炒热氛围。&lt;/p&gt;
&lt;p&gt;由于“大富豪”的名称、玩法规则各个地区都有差异（类似我国麻将）&lt;br&gt;
这里我主要介绍一种由我进行本地化改造的版本“大革命”。&lt;/p&gt;
&lt;p&gt;其实规则大体上和斗地主相似，如果会玩斗地主只需要看下相异之处即可。&lt;/p&gt;
&lt;p&gt;哦对了，游戏需要四个人来进行（当然你也可以自己修改&lt;/p&gt;
&lt;h2 id=&#34;基础规则&#34;&gt;基础规则&lt;/h2&gt;
&lt;h3 id=&#34;场次&#34;&gt;场次&lt;/h3&gt;
&lt;p&gt;一局游戏由多场组成，并由最后一场排名决定游戏最终排名，所以在最后一场之前即使是倒数第一也没关系！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐一局游戏场数&lt;/strong&gt;：五场 或 十场&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单场胜利&lt;/strong&gt;：第一个出完手牌的人为第一名，其他人依次决出第二第三和第四名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在每场开局时&lt;/strong&gt;，随机抽出一张卡牌从游戏中除外，用来平衡卡牌数量并防止算牌。再下一场开始时，将上一场除外的这张牌加回牌堆并重新抽出一张牌除外。&lt;/p&gt;
&lt;h3 id=&#34;上下家&#34;&gt;上下家&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;上家&lt;/strong&gt;：在你之前出牌的那个人&lt;br&gt;
&lt;strong&gt;下家&lt;/strong&gt;：你出牌后出牌的那个人&lt;/p&gt;
&lt;h3 id=&#34;卡牌强度&#34;&gt;卡牌强度&lt;/h3&gt;
&lt;p&gt;由弱到强依次为 3&amp;hellip;K&amp;hellip;2&lt;br&gt;
即3最小，2最大，鬼牌稍后再说。&lt;/p&gt;
&lt;h3 id=&#34;出牌&#34;&gt;出牌&lt;/h3&gt;
&lt;p&gt;一场游戏由多轮出牌阶段构成。每轮的首位出牌者称为该轮的&lt;strong&gt;主导者&lt;/strong&gt;&lt;br&gt;
主导者可以打出如下所示的任意一种类型的任意牌，其他三家继续依照你的出牌类型接牌。&lt;/p&gt;
&lt;p&gt;第一场开始时由参赛玩家自行决定由谁当主导者，即由谁开始出牌。&lt;br&gt;
之后几场开始时由第四名率先出牌。&lt;/p&gt;
&lt;h4 id=&#34;可选出牌类型&#34;&gt;可选出牌类型&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;单牌&lt;/strong&gt;：一张牌&lt;br&gt;
&lt;strong&gt;对子&lt;/strong&gt;：两张一样的牌&lt;br&gt;
&lt;strong&gt;顺子&lt;/strong&gt;：三张一样的牌&lt;br&gt;
&lt;strong&gt;链子&lt;/strong&gt;：连续三张（或以上）&lt;strong&gt;同样花色&lt;/strong&gt;的牌（例：红桃A 红桃2 红桃3 红桃4）&lt;br&gt;
&lt;strong&gt;大革命&lt;/strong&gt;：四张相同的牌&lt;/p&gt;
&lt;h3 id=&#34;接牌&#34;&gt;接牌&lt;/h3&gt;
&lt;p&gt;你必须打出比你上家更大的同类型牌，即，你的上家出链子 3 4 5 时，你必须也出链子，且强度至少为 4 5 6，当然你也可以选择不出，来跳过你的回合，由下家出牌。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当你打出牌后，其他三家都选择不出时，本轮接牌结束&lt;/strong&gt;。你成为新一轮的主导者。&lt;/p&gt;
&lt;h3 id=&#34;大革命&#34;&gt;大革命&lt;/h3&gt;
&lt;p&gt;当你打出大革命（即四张相同牌）时，&lt;strong&gt;如果没有人接上&lt;/strong&gt;，将会进入革命阶段，此时卡牌强队将会发生反转！&lt;br&gt;
&lt;strong&gt;即由原来的 3最小2最大，变为2最小，3最大&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;如果有人接上，卡牌强度将不会发生变化，视为革命发动失败，当然下家仍然可以继续接牌来发动大革命。（下下家还能接牌反制&lt;/p&gt;
&lt;h3 id=&#34;8切&#34;&gt;8切&lt;/h3&gt;
&lt;p&gt;当你打出的牌型（单牌/对子/顺子/链子/大革命）中含有8时，其他三家不能接牌，必须选择不出。你成为主导者。&lt;/p&gt;
&lt;h3 id=&#34;鬼牌&#34;&gt;鬼牌&lt;/h3&gt;
&lt;p&gt;在本游戏中，鬼牌只有一张，所以游戏开始前请先将一张鬼牌除外。一副扑克牌54张，除外一张鬼牌 &lt;strong&gt;并且&lt;/strong&gt; 每场开始前除外一张牌，正好剩下52张，每人13张牌，合理！&lt;/p&gt;
&lt;p&gt;鬼牌，视为最大的牌，并不受大革命影响，即它在平时比 2 大，在革命时比 3 大。&lt;/p&gt;
&lt;p&gt;鬼牌可以冒充任意一张牌使用，即它可以配牌，你可以&lt;strong&gt;通过配牌发动大革命&lt;/strong&gt;，但当鬼牌冒充8的时候，&lt;strong&gt;没有8切效果&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;鬼牌不能最后打出，否则视为犯规，直接变成第四名！如果犯规者不是本场游戏的第一名，则此时不会触发一落千丈。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;黑桃3&#34;&gt;黑桃3&lt;/h3&gt;
&lt;p&gt;黑桃3可以反制鬼牌，当鬼牌单张打出时，可以打出黑桃3进行反制，此时打出黑桃三者成为主导者。&lt;/p&gt;
&lt;h3 id=&#34;一落千丈&#34;&gt;一落千丈&lt;/h3&gt;
&lt;p&gt;上一场的第一如果本场没能成为第一，则当新的第一产生时他被迫成为第四名，手中的牌直接放入弃牌堆（扣着，不能公示给其他三家看）。剩下两人决出第二第三名。&lt;/p&gt;
&lt;h3 id=&#34;收税&#34;&gt;收税&lt;/h3&gt;
&lt;p&gt;第四向第一交出最大的两张牌，第三向第二交出最大的一张牌。&lt;br&gt;
第一向第四交出任意的两张牌，第二向第三交出任意的一张牌。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所有要交换的牌应在交换前选好，扣在桌子上，双方同时推给对方。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;可选规则&#34;&gt;可选规则&lt;/h2&gt;
&lt;h3 id=&#34;抗税&#34;&gt;抗税&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;建议开启&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;应用本项规则将提高大革命发动的频率&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;即当缴税者手里存在三张相同的牌和鬼牌时，可以选择不交出鬼牌，由第二大的牌代替。&lt;br&gt;
但缴税者&lt;strong&gt;仅可&lt;/strong&gt;将鬼牌用于配给其他三张牌来发动大革命。&lt;/p&gt;
&lt;h3 id=&#34;逃税&#34;&gt;逃税&lt;/h3&gt;
&lt;p&gt;即交出其他牌代替而不是最大的牌，当逃税者在游戏中使用逃掉的那张牌被应收税者发现时，将直接变成第四名。&lt;/p&gt;
&lt;h3 id=&#34;花色连锁&#34;&gt;花色连锁&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;建议专业人士开启&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;应用本项规则将提高提高游戏难度，并对第一名产生一定程度的限制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当你打出单张时，如果下家跟牌的花色与你打出的牌的花色相同则触发花色连锁，&lt;br&gt;
此时所有人只能出此花色的牌，当其他三家都不出时，你成为主导者。&lt;/p&gt;
&lt;p&gt;以上是基本连锁，又称两张触发连锁，同理还有三张触发连锁，可自行尝试。&lt;/p&gt;
&lt;h3 id=&#34;斗地主强度规则&#34;&gt;斗地主强度规则&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;对于没玩过斗地主的玩家，可能更习惯于卡牌强度由1到13依次递增&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;即强度由 3-2 变为由 A-K
此时 8切 变为 6切
黑桃3反击变为黑桃A反击&lt;/p&gt;
</description>
        </item>
        <item>
        <title>浅谈邀请码的生成</title>
        <link>https://blog.frostmiku.com/archives/33/</link>
        <pubDate>Tue, 09 Feb 2021 01:53:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/33/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/33/matt-le-SJSpo9hQf7s-unsplash.jpg" alt="Featured image of post 浅谈邀请码的生成" /&gt;&lt;p&gt;今天自己写项目玩，想要实现一个类似邀请码的机制，没想到小小邀请码还真没那么简单&lt;/p&gt;
&lt;h2 id=&#34;需求分析&#34;&gt;需求分析&lt;/h2&gt;
&lt;p&gt;首先是硬性需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不可重复&lt;/li&gt;
&lt;li&gt;单射&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看到这两点需求，我第一反应就是 Hash，但是Hash需要处理冲突，并不是一个很好的解决方案。另外出于美学之类的考虑，我们还有一些别的需求，毕竟谁也不想面对面分享邀请码的时候拿出来一串
&lt;code&gt;18ce3ca04a725cc6b57d5ec0ae0ccd66&lt;/code&gt;
这样的&lt;del&gt;乱码&lt;/del&gt;吧&lt;/p&gt;
&lt;p&gt;非硬性需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定长&lt;/li&gt;
&lt;li&gt;不易被推测出规律&lt;/li&gt;
&lt;li&gt;效率高&lt;/li&gt;
&lt;li&gt;支持并发&lt;/li&gt;
&lt;li&gt;可溯源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;仔细思考了一下 Hash 的可行性后我决定放弃这种方案&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;方案分析&#34;&gt;方案分析&lt;/h2&gt;
&lt;p&gt;群里的菊苣给出了洗牌算法的方案，这是一个预生成的方案
这里就预生成方案统一分析&lt;/p&gt;
&lt;h3 id=&#34;预生成&#34;&gt;预生成&lt;/h3&gt;
&lt;p&gt;讲真，不考虑别的因素，预生成方案确实不错，洗牌算法也非常的棒&lt;/p&gt;
&lt;p&gt;这种方案的思想是根据随机生成算法，预先生成一批邀请码，然后将这些邀请码缓存，当用户请求时将其分配给用户，当邀请码分配完时，再生成一批，如此循环。&lt;/p&gt;
&lt;h4 id=&#34;弊端&#34;&gt;弊端&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;每次重新生成时都要检查是否重复 &lt;del&gt;而且多数情况下都为否&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;邀请码本身需要持久化存储&lt;/li&gt;
&lt;li&gt;用户和邀请码的关系需要记录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于唯一性我啪的一下就想到了 UUID 和 MD5，&lt;del&gt;很快啊&lt;/del&gt;
MD5作为一种 Hash 在一开始就被我放弃了，接下来我们看一下 UUID&lt;/p&gt;
&lt;h2 id=&#34;uuid&#34;&gt;UUID&lt;/h2&gt;
&lt;p&gt;引用一下Wikipedia的说法&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通用唯一识别码（英语：Universally Unique Identifier，缩写：UUID）是用于计算机体系中以识别信息数目的一个128位标识符，根据标准方法生成，不依赖中央机构的注册和分配，UUID具有唯一性，这与其他大多数编号方案不同。重复UUID码概率接近零，可以忽略不计。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这下唯一性是真的强，但是分享一串128位标识符的画面确实也很美&amp;hellip;&lt;/p&gt;
&lt;p&gt;没啥好想法的我上网搜了一下，又得到了两种方案，一种类似于Base64，这种没啥好说的，接下来主要说一下另一种方案&lt;/p&gt;
&lt;h3 id=&#34;密码学方案&#34;&gt;密码学方案&lt;/h3&gt;
&lt;p&gt;这种方案本质上是一个实现了由 用户ID空间 到 邀请码空间 的双射，通过用户ID确定了邀请码的唯一性，同时又可通过反函数来对邀请码溯源，既不需要保存邀请码，又不需要保存关系，针不戳&lt;/p&gt;
&lt;p&gt;我们先来写个简单函数实现双射&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0123456789ABCDEF&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;233&lt;/span&gt;

	&lt;span class=&#34;nx&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 为了避免用户 ID的直接泄漏，我们可以先加点盐
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pid&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ID: %-2d  ---&amp;gt;  %c %c %c %c %c %c\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个函数本质上和进制转换函数没什么区别，我们跑一下看看效果&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  test go run test.go
ID: 0   ---&amp;gt;  0 0 0 0 E 9
ID: 1   ---&amp;gt;  0 0 0 0 E A
ID: 2   ---&amp;gt;  0 0 0 0 E B
ID: 3   ---&amp;gt;  0 0 0 0 E C
ID: 4   ---&amp;gt;  0 0 0 0 E D
ID: 75  ---&amp;gt;  0 0 0 1 3 4
ID: 76  ---&amp;gt;  0 0 0 1 3 5
ID: 77  ---&amp;gt;  0 0 0 1 3 6
ID: 78  ---&amp;gt;  0 0 0 1 3 7
ID: 79  ---&amp;gt;  0 0 0 1 3 8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;啊这&amp;hellip;这完全在预料之中，&lt;del&gt;换下Chars里字母的顺序也能当个凯撒密码用用&lt;/del&gt;
好吧不就是看起来太规律了么，我们来把这个结果用密码学方法扩散和混淆一下&lt;/p&gt;
&lt;h4 id=&#34;扩散和混淆&#34;&gt;扩散和混淆&lt;/h4&gt;
&lt;p&gt;在密码学当中，混淆（confusion）与扩散（diffusion）是设计密码学算法的两种主要方法。这样的定义最早出现在克劳德·香农1945年的论文《密码学的数学理论》当中。&lt;/p&gt;
&lt;p&gt;在克劳德·香农的定义之中，混淆主要是用来使密文和对称式加密方法中密钥的关系变得尽可能的复杂；而扩散则主要是用来使用明文和密文关的关系变得尽可能的复杂，明文中任何一点小更动都会使得密文有很大的差异。 混乱用于掩盖明文与密文之间的关系。这可以挫败通过研究密文以获取冗余度和统计模式的企图。做到这一点最容易的方法是“代替”。 扩散通过将明文冗余度分散到密文中使之分散开来。即将单个明文或密钥位的影响尽可能扩大到更多的密文中去。产生扩散最简单的方法是换位（置换）。&lt;/p&gt;
&lt;p&gt;改进后的算法如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0123456789ABCDEF&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;233&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;

	&lt;span class=&#34;nx&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 放大
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pid&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ID: %-2d  ---&amp;gt;  %c %c %c %c %c %c\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里我们给用户ID放大的时候乘了个和 Base 互质的数 Prime，这是基于循环群的性质：
若 m 和 p 互质，则 ( id * m ) % p 的结果遍历[0, p) 的所有整数。这保证了放大后结果的分布和原数据的分布同样均匀。
让我们来跑一下试试：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  test go run test.go
ID: 0   ---&amp;gt;  0 4 B 2 7 9
ID: 1   ---&amp;gt;  0 0 0 0 F 0
ID: 2   ---&amp;gt;  0 C 5 E 6 7
ID: 3   ---&amp;gt;  0 8 A C D E
ID: 4   ---&amp;gt;  0 4 F B 5 5
ID: 75  ---&amp;gt;  0 8 2 E 5 6
ID: 76  ---&amp;gt;  0 4 7 C C D
ID: 77  ---&amp;gt;  0 0 C B 4 4
ID: 78  ---&amp;gt;  0 C 1 9 B B
ID: 79  ---&amp;gt;  0 8 6 7 3 2

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;啊这&amp;hellip;怎么开头全是0啊&amp;hellip;算了，正好拿它做校验位，顺便再给结果洗个牌
最终代码如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0123456789ABCDEF&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;233&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;

	&lt;span class=&#34;nx&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 放大
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pid&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 校验位
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;

	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ID: %-2d  ---&amp;gt; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34; %c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Prime2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 洗牌
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里用了一个和 CodeLength 互质的数 Prime2 对生成结果进行了洗牌，原因和之前的 Prime 一样
跑一下看看效果&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  test go run test.go
ID: 0   ---&amp;gt;  7 2 B 4 3 9
ID: 1   ---&amp;gt;  F 0 0 0 3 0
ID: 2   ---&amp;gt;  6 E 5 C 2 7
ID: 3   ---&amp;gt;  D C A 8 3 E
ID: 4   ---&amp;gt;  5 B F 4 4 5
ID: 75  ---&amp;gt;  5 E 2 8 5 6
ID: 76  ---&amp;gt;  C C 7 4 0 D
ID: 77  ---&amp;gt;  4 B C 0 1 4
ID: 78  ---&amp;gt;  B 9 1 C 2 B
ID: 79  ---&amp;gt;  3 7 6 8 2 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ohhhhhhhhh
效果相当不错！&lt;/p&gt;
&lt;h4 id=&#34;解码&#34;&gt;解码&lt;/h4&gt;
&lt;p&gt;具体解码流程就是上面的最终函数倒过来写，可能反函数不太好理解，在纸上推一下就好了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 反洗牌
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Prime2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 转换回 Chars 下标
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]))&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 非法字符检查
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 校验
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 反函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 反放大
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt;

	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;需要注意的是我们之前是从b[5]&amp;hellip;b[0]反着print的
所以解码的时候记得倒一下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nf&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;76&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// CC740D
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;test2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;D047CC&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 因为我们之前是反着print的
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最终输出如下&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;➜  test go run test.go
ID: 76  ---&amp;gt;  C C 7 4 0 D
76
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;稍微分析一下，6位16进制邀请码，1位校验，可用范围为0x00000到0xFFFFF，减去扩大和加盐带来的损耗，大概能生成14万个邀请码，对于我来说是够用了，如果你觉得少的话可以&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;扩大Base，比如用32进制或者64进制~~（其实我本人用的10进制，只有数字多好看啊 小声bb）~~&lt;/li&gt;
&lt;li&gt;增加邀请码位数，8位不也挺好的么？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最终代码&#34;&gt;最终代码&lt;/h2&gt;
&lt;p&gt;思路验证完毕，让我们把函数的输出补上，并把第一个函数的输出给倒回来，顺便润润色&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;strings&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0123456789ABCDEF&amp;#34;&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;233&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;genCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;76&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;genCode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;

	&lt;span class=&#34;nx&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//扩大
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;pid&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 校验位
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Prime2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 洗牌
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 反洗牌
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Prime2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 转换回 Chars 下标
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;strings&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]))&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 非法字符检查
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 校验
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;expect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 反函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;uint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;uint&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CodeLength&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Base&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;c1&#34;&gt;// 反放大
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Salt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Prime&lt;/span&gt;

	&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://my.oschina.net/bravozu/blog/1827254&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://my.oschina.net/bravozu/blog/1827254&lt;/a&gt; &lt;del&gt;这老哥代码有问题（小声bb&lt;/del&gt;
&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/wiki/P&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zh.wikipedia.org/wiki/P&lt;/a&gt;盒
&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/wiki/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zh.wikipedia.org/wiki/&lt;/a&gt;循環群
&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/wiki/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zh.wikipedia.org/wiki/&lt;/a&gt;通用唯一识别码
&lt;a class=&#34;link&#34; href=&#34;https://www.knowpia.cn/pages/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.knowpia.cn/pages/&lt;/a&gt;混淆与扩散&lt;/p&gt;
</description>
        </item>
        <item>
        <title>给Linux的根目录扩容</title>
        <link>https://blog.frostmiku.com/archives/32/</link>
        <pubDate>Mon, 01 Feb 2021 18:10:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/32/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/32/1.jpg" alt="Featured image of post 给Linux的根目录扩容" /&gt;&lt;p&gt;今天服务商的母鸡被淦废了，售后给我开了台新机子，我闲的无聊装了个Ubuntu，迁移数据到一半提示可用空间不足，我一看根目录就5GB&amp;hellip; &lt;br&gt;
于是有了如下对话&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 34; flex-basis: 83px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/32/1.jpg&#34; data-size=&#34;415x1188&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/32/1.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/32/1_hu8f027bb60d8c1e73edbd71d61f8f690d_103583_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/32/1_hu8f027bb60d8c1e73edbd71d61f8f690d_103583_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;415&#34;
				height=&#34;1188&#34;
				loading=&#34;lazy&#34;
				alt=&#34;对话&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;对话&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;于是开始扩容&amp;hellip;&lt;br&gt;
这篇文章写的很详细了：&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/9db2df60fd0a&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;传送门&lt;/a&gt;&lt;br&gt;
不过俺是ext4所以最后一步要改一下&lt;/p&gt;
&lt;p&gt;把 &lt;code&gt;xfs_growfs /dev/sda3&lt;/code&gt; 改成 &lt;code&gt;resize2fs /dev/sda3&lt;/code&gt; 就行了&lt;/p&gt;
&lt;p&gt;虽说不要生产垃圾文章，但这样直接贴个链接总感觉写了个寂寞&amp;hellip;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>FrostCraft 游玩指南</title>
        <link>https://blog.frostmiku.com/archives/30/</link>
        <pubDate>Sun, 03 Jan 2021 21:37:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/30/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/30/minecraft.jpg" alt="Featured image of post FrostCraft 游玩指南" /&gt;&lt;h2 id=&#34;qa&#34;&gt;Q&amp;amp;A&lt;/h2&gt;
&lt;p&gt;Q：游戏启动崩溃
A：看下是不是用的32位Java，给的内存太大了&lt;/p&gt;
&lt;p&gt;Q：换了64位Java/调小内存后进入服务器显示内存太小&amp;hellip;
A：那你调大啊 囧rz&amp;hellip; 推荐Java 8 x64 给 2048MB&lt;/p&gt;
&lt;p&gt;Q：服务器进不去，提示无效会话让我重启游戏或启动器&amp;hellip;
A：看最上面，使用启动器外置登录刚注册的账号&lt;/p&gt;
&lt;p&gt;Q：是使用FrostCraft账号登录的，但还是提示让我重启游戏或启动器&amp;hellip;
A：Java版本太老了，更新一下吧！（推荐下载OpenJ9&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;常用指令&#34;&gt;常用指令&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/spawn          ----回到空境
/sethome        ----设置家
/home           ----回家
/back           ----返回上次传送的地点
/recharge       ----获取飞行能量
/near           ----搜索附近玩家
/res            ----设置领地
/res set        ----站在领地里输入，设置权限
/suicide        ----自杀
/pay &amp;lt;钱&amp;gt; &amp;lt;玩家&amp;gt;           ----转账
/ping           ----获取延迟
/prewards       ----领取奖励
/time           ----查看当前世界时间
/stats          ----查看自己的统计数据
/art            ----画画功能
/shop find &amp;lt;物品名称&amp;gt;  - 寻找附近有没有交易该物品的商店
/shop staff add &amp;lt;玩家&amp;gt; - 添加指定玩家为此商店的商店助手成员
/shop staff del &amp;lt;玩家&amp;gt; - 移除指定玩家为此商店的商店助手成员
/shop staff clear      - 清空此商店的所有商店助手
/shop staff list       - 查看此商店的商店助手成员列表
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;设定&#34;&gt;设定&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;离线90天自动清除数据！&lt;/strong&gt;
&lt;strong&gt;请不要在除了主世界以外的地方建家（服务器不保证其数据安全）&lt;/strong&gt;
&lt;strong&gt;服务器为开放世界，但这并不意味着你可以去骚扰别人&lt;/strong&gt;
&lt;strong&gt;注意财产安全，有钱买地，没钱上牌子锁&lt;/strong&gt;
&lt;strong&gt;服务器死亡掉落&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不死图腾放在背包里必要时会自动使用，它甚至可以避免掉入虚空&lt;/p&gt;
&lt;p&gt;冰块是游戏代币，注意，它和游戏内的 Ice 不是同一种东西！&lt;/p&gt;
&lt;p&gt;&lt;del&gt;游戏世界内无法进行传送（但可以home和back，back仅可用在主世界）&lt;/del&gt;
所以我们修改了载具特性
矿车在轨道上跑不会减速，这意味着你可以兴建轨道交通
右键点击轨道将会自动生成一辆矿车，自动生成的矿车将在下车时移除
船，只能在水上跑
以上载具在撞击实体时会对实体产生巨大伤害，所以卧轨成为可能
离开载具时会自动讲载具放入背包
鞘翅可以弹射起步！
可以消耗飞行能量起飞！&lt;/p&gt;
&lt;p&gt;1经验换1飞行能量
每飞一格消耗1飞行能量
飞在天上不动每秒消耗0.5飞行能量
玩家从高处摔下来时扣除飞行能量抵消伤害
只在玩家从3格以上高度摔下时会触发抵消
例如，玩家从 10 格高的地方摔下, 那么 (10-3) * 2 = 14 飞行能量将被扣除&lt;/p&gt;
&lt;p&gt;游戏世界时间为原版的10倍，即200分钟一天
在线玩家超过50%睡觉时可加速夜晚进度
进入睡眠的玩家越多，夜晚加速越快&lt;/p&gt;
&lt;p&gt;刷怪笼不可获得，精准采集也不行&lt;/p&gt;
&lt;p&gt;每日可领100冰块
在线1小时获得20冰块，系统自动发放，AFK不算入时长
300秒不动，自动进入挂机状态
挂机免疫伤害&lt;/p&gt;
&lt;p&gt;战斗模式持续15秒 ，击杀其他玩家1%几率掉落他的头
可被抢夺附魔加成&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Lv1: 5.0
Lv2: 15.0
​Lv3: 30.0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如玩家原本掉头几率为 1% ，若被附魔了抢夺3的武器（增幅 30%）杀死，则掉头几率变为1.3%&lt;/p&gt;
&lt;p&gt;潜行右击牌子可以编辑&lt;/p&gt;
&lt;p&gt;木棍保护区，线查看保护区，有粒子特效可视化区域大小
土地最大64x64 最多3个 每个最多2子领地
领地不可传送，不可阻止别人移动（但你可以修建围墙）
领地按面积计算，你只要买了，不管是地上的，地下的，还是天上的，都是你的
地价 1方块3冰块，删除自己的领地时，1方块返还2冰块&lt;/p&gt;
&lt;h2 id=&#34;更新日志&#34;&gt;更新日志&lt;/h2&gt;
&lt;h3 id=&#34;2021114&#34;&gt;2021.1.14&lt;/h3&gt;
&lt;p&gt;现在你可以使用箱子开商店了，在地上放置一个箱子然后拿着你想出售的物品左键点击箱子就能出售了
输入/shop 获取更多信息
开设每个店铺需要10冰块的开设费，并且在每次修改商店价格时收取1冰块
每人最多开设10个店铺
交易将产生0.05的交易税
当然，你也可以给你的商店添加多位店员来辅助管理商店&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/shop find &amp;lt;物品名称&amp;gt;  - 寻找附近有没有交易该物品的商店
/shop staff add &amp;lt;玩家&amp;gt; - 添加指定玩家为此商店的商店助手成员
/shop staff del &amp;lt;玩家&amp;gt; - 移除指定玩家为此商店的商店助手成员
/shop staff clear      - 清空此商店的所有商店助手
/shop staff list       - 查看此商店的商店助手成员列表
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2021113&#34;&gt;2021.1.13&lt;/h3&gt;
&lt;p&gt;现在可以在MC里画画并向别人展示你的画作了，当然，是像素风的。
成为画家的第一步，输入/art&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Docker 笔记</title>
        <link>https://blog.frostmiku.com/archives/29/</link>
        <pubDate>Sun, 19 Jul 2020 23:14:16 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/29/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;仅记录，待日后完善&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;docker内部没法解析域名&#34;&gt;Docker内部没法解析域名&lt;/h2&gt;
&lt;p&gt;启动参数加上 &amp;ndash;network=host （不过这样容器就用host的port了&lt;/p&gt;
&lt;h2 id=&#34;开机自启&#34;&gt;开机自启&lt;/h2&gt;
&lt;p&gt;启动参数加上 &amp;ndash;restart=always&lt;/p&gt;
&lt;h2 id=&#34;进入容器内部&#34;&gt;进入容器内部&lt;/h2&gt;
&lt;p&gt;docker exec -it name /bin/bash&lt;/p&gt;
</description>
        </item>
        <item>
        <title>OpenCore打造一个完美的 Hackintosh 遇到的问题</title>
        <link>https://blog.frostmiku.com/archives/28/</link>
        <pubDate>Thu, 16 Jul 2020 23:18:41 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/28/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/28/bigsur.png" alt="Featured image of post OpenCore打造一个完美的 Hackintosh 遇到的问题" /&gt;&lt;blockquote&gt;
&lt;p&gt;主板是 msi z370 a pro，草草记录，待日后完善&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;开机崩溃重启&#34;&gt;开机崩溃重启&lt;/h2&gt;
&lt;p&gt;启动参数加 -v 看看情况。&lt;/p&gt;
&lt;p&gt;如果是内存panic但又怎么都解决不了，考虑一下核显显存，BIOS设置 64 MB&lt;/p&gt;
&lt;h2 id=&#34;开机两阶段苹果logo大小不一样&#34;&gt;开机两阶段苹果logo大小不一样&lt;/h2&gt;
&lt;p&gt;UIScale 调一下 1 或者 2&lt;/p&gt;
&lt;h2 id=&#34;睡眠&#34;&gt;睡眠&lt;/h2&gt;
&lt;p&gt;休眠不建议开，对于台式机来说不存在节电续航的需求，并且休眠还会产生内存向硬盘的大量数据读写，影响硬盘寿命&lt;/p&gt;
&lt;p&gt;但睡眠还是必要的。&lt;/p&gt;
&lt;h3 id=&#34;睡眠秒醒唤醒后崩溃重启&#34;&gt;睡眠秒醒，唤醒后崩溃重启&lt;/h3&gt;
&lt;p&gt;使用hackintool进行usb定制，把常用设备内建。&lt;/p&gt;
&lt;p&gt;PowerTimeoutKernelPanic: 10.15系统中存在一些设备自身的电源管理无法让系统进入睡眠而超时，导致内核奔溃，如果有这个问题请选择YES。&lt;/p&gt;
&lt;h2 id=&#34;有线音频输出声音小&#34;&gt;有线音频输出声音小&lt;/h2&gt;
&lt;p&gt;换个layout-id试试，我这块板子用的“1”&lt;/p&gt;
&lt;h2 id=&#34;博通无线网卡开机时网速慢必须手动关掉重开wifi--睡眠唤醒后没网网速慢&#34;&gt;博通无线网卡开机时网速慢，必须手动关掉重开wifi / 睡眠唤醒后没网、网速慢&lt;/h2&gt;
&lt;p&gt;使用 AirportBrcmFixup.kext 修复&lt;/p&gt;
</description>
        </item>
        <item>
        <title>WebSocket协议为什么要求掩码处理</title>
        <link>https://blog.frostmiku.com/archives/27/</link>
        <pubDate>Wed, 01 Jul 2020 20:52:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/27/</guid>
        <description>&lt;p&gt;今天实现 WebSocket Client 的时候发现协议要求 Client mask payload&lt;/p&gt;
&lt;p&gt;出于偷懒的目的，我打算把 Masking-key 直接写死，但仔细一想既然 Masking-key 需要放进 Frame 里，说明它应该是动态的，但为什么要这样设计呢？&lt;/p&gt;
&lt;p&gt;RFC 6455 5.3 节有这么一句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The unpredictability of the masking key is essential to prevent authors of malicious applications from selecting the bytes that appear on the wire.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;del&gt;果然是为了安全&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;RFC 6455 还好心的在 &lt;a class=&#34;link&#34; href=&#34;https://tools.ietf.org/html/rfc6455#section-10.3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;10.3.  Attacks On Infrastructure (Masking)&lt;/a&gt; 详细解释了攻击的实现 : )&lt;/p&gt;
</description>
        </item>
        <item>
        <title>买了些代工厂零食</title>
        <link>https://blog.frostmiku.com/archives/26/</link>
        <pubDate>Tue, 16 Jun 2020 11:25:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/26/</guid>
        <description>&lt;p&gt;趁着618屯一波零食吃，众所周知松鼠/铺子/草家的零食基本都是代工厂贴牌生产的，品牌溢价高，直接去工厂自营店买能省不少钱。&lt;/p&gt;
&lt;p&gt;我觉得三家零食没啥区别，甚至代工厂还有相同的，就不做区分直接放链接了&lt;/p&gt;
&lt;p&gt;&lt;del&gt;以下零食还在骑马来的路上，我还没吃过，到了以后再做测评！&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://detail.tmall.com/item.htm?spm=a1z09.8149145.0.0.23465add7jFuPR&amp;amp;id=616071362894&amp;amp;sku_properties=122216451:41312&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;猪肉脯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;就是很普通的猪肉脯&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://detail.tmall.com/item.htm?_u=g2o6vkema3c6&amp;amp;id=612996716469&amp;amp;skuId=4556018167162&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;牛板筋&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我爸觉得味道不错，可我觉得不怎么好吃&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://detail.tmall.com/item.htm?_u=g2o6vkem2aa1&amp;amp;id=521931132006&amp;amp;skuId=4309049199052&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;蔓越莓曲奇&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;梅干多少有点硬！&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://detail.tmall.com/item.htm?_u=g2o6vkem6a9d&amp;amp;id=43030514667&amp;amp;skuId=3105907456818&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;麻薯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好吃，买少了 :(&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://detail.tmall.com/item.htm?_u=g2o6vkem222e&amp;amp;id=552247612791&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;肉松饼/手撕面包&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;肉松饼不行，手撕面包好吃&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://detail.tmall.com/item.htm?id=528436947197&amp;amp;spm=a1z09.2.0.0.79022e8dWOOPHx&amp;amp;_u=g2o6vkemb367&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;麻辣牛肉&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好吃！有点贵啊&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://detail.tmall.com/item.htm?id=529345550685&amp;amp;spm=a1z09.2.0.0.79022e8dWOOPHx&amp;amp;_u=g2o6vkem5da7&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;鱼豆腐&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;口感不错，最先吃完的就是这个！&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://detail.tmall.com/item.htm?id=596904889698&amp;amp;spm=a1z09.2.0.0.418e2e8dTawVA9&amp;amp;_u=g2o6vkem7f05&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;酸辣粉&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;经典酸辣粉吃起来不错，普通的那个酸辣粉料有点少&amp;hellip;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>搭建了一个个人知识库！</title>
        <link>https://blog.frostmiku.com/archives/25/</link>
        <pubDate>Fri, 17 Apr 2020 18:13:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/25/</guid>
        <description>&lt;p&gt;好久不见，最近发现了一个叫做 tiddly wiki 的项目。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;用了一下太香了！以后笔记主要就更新在自己知识库了，blog就随便写点别的。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;言语难以形容，欢迎大家前往体验：&lt;a class=&#34;link&#34; href=&#34;https://pages.frostmiku.com/wiki/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;传送门&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你可以在页面上体验到包括编辑在内的全部功能，并可通过保存操作来得到修改后的副本&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>关于一次对于微波炉蒸米饭的尝试</title>
        <link>https://blog.frostmiku.com/archives/22/</link>
        <pubDate>Tue, 03 Mar 2020 14:20:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/22/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/22/the-creative-exchange-d2zvqp3fpro-unsplash.jpg" alt="Featured image of post 关于一次对于微波炉蒸米饭的尝试" /&gt;&lt;p&gt;今天中午出门觅食，发现楼下一份西红柿鸡蛋饭要14元，于是被吓回了家&amp;hellip;Orz&amp;hellip;&lt;/p&gt;
&lt;p&gt;由于窝过于清贫（指买不起电饭锅）遂尝试使用微波炉蒸大米。网上简单搜索后没有得到理想的结果，便决定将过程记载于此。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;根据以往经验，微波炉加热食物会导致食物水分流失变干，所以尝试在碗上扣个盘子来保持水分。&lt;/p&gt;
&lt;p&gt;按照蒸米饭的经验加水。微波高火8分钟后闻到米香，拿出来吃了一口发现是生的&amp;hellip;&lt;/p&gt;
&lt;p&gt;发现是没水了，于是补水后调中高火4分钟。发现水还是少了，但最上面一层熟了，证明微波炉蒸饭可行。&lt;/p&gt;
&lt;p&gt;补水后中火3分钟，米饭熟了但很硬，水也没用完，猜想是因为加热速度过快导致大米无法及时吸水，应尝试减小火力增大时长。&lt;/p&gt;
&lt;p&gt;略微补水后，调中小火5分钟。然后米饭就&amp;hellip;熟了！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;总结以上过程，设计实验 大米与水 1:3 中低火30分钟 或 中火20分钟，有待后续验证&lt;/p&gt;
&lt;p&gt;ps:炒蛋忘放盐了 QAQ&lt;/p&gt;
</description>
        </item>
        <item>
        <title>编译原理学习笔记：文法与语言</title>
        <link>https://blog.frostmiku.com/archives/20/</link>
        <pubDate>Fri, 21 Feb 2020 23:00:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/20/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/20/pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg" alt="Featured image of post 编译原理学习笔记：文法与语言" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;本学期开了编译原理课，嗯写作本文的原因就这么简单&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;基本概念&#34;&gt;基本概念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;字母表：非空有限集，一般用$∑$表示，如$∑＝{a,b,c}$&lt;/li&gt;
&lt;li&gt;符号： $∑$中的元素称为符号。&lt;/li&gt;
&lt;li&gt;符号串：符号的有穷序列称符号串，也可称为字，用ε表示空字符串。&lt;/li&gt;
&lt;li&gt;长度：符号串中包括的符号的个数，如$|ab|＝2,|ε|＝0$&lt;/li&gt;
&lt;li&gt;连接：设x和y是字符串，则称$x·y$是其连接，符号‘·’一般可省略。
对于任意字符串$β$，有$βε＝εβ＝β$&lt;/li&gt;
&lt;li&gt;乘积：设A和B是符号串集，则用AB表示它们的乘积：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
AB＝{xy|x∈A,y∈B }
$$&lt;/p&gt;
&lt;p&gt;显然${ε}A=A{ε}=A$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空集：不含任何元素的集合φ，对任何字符串集A有：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
φA＝Aφ＝A
$$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方幂：设A是字符串集，则A的方幂定义为：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
A^0 ={ε};
A^1 ＝A;
A^n ＝A^{n-1} A
$$&lt;/p&gt;
&lt;p&gt;特别地，若x是$∑$中的字符，则x的n次自身连接即$x^n$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;闭包/正闭包/星闭包：设A是符号集，
用$A^+$表示A的正闭包:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
A^+=A^1∪A^2∪\dots∪A^n∪\dots
$$&lt;/p&gt;
&lt;p&gt;用$A^*$表示A的星闭包:&lt;/p&gt;
&lt;p&gt;$$
A^*＝A^0∪A^1∪A^2∪\dots∪A^n∪\dots={ε}∪A^+
$$&lt;/p&gt;
&lt;p&gt;两者统称为A的闭包。&lt;/p&gt;
&lt;p&gt;举个例子&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;：
设$A = {a,b}$ 则：&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
&amp;amp;A^0 ＝ {ε}\cr
&amp;amp;A^1 = {a,b}\cr
&amp;amp;A^2 = AA = {aa,ab,ba,bb}\cr
&amp;amp;A^3 = AAA = {aaa,aab,aba,abb,baa,bab,bba,bbb}\cr
&amp;amp;\dots\cr
\end{aligned}
$$&lt;/p&gt;
&lt;h3 id=&#34;符号和符号串&#34;&gt;符号和符号串&lt;/h3&gt;
&lt;p&gt;任何程序设计语言都是某一基本符号集上的字符序列，其中的字符用来构造单词，单词构造更大的语法单位，表达式、语句等复合对象。其中，&lt;strong&gt;单词是最小的语义单位&lt;/strong&gt;,它不包含任何子结构，因此每个单词是简单的字符序列。&lt;/p&gt;
&lt;h2 id=&#34;语言&#34;&gt;语言&lt;/h2&gt;
&lt;p&gt;程序设计语言是一个&lt;strong&gt;记号系统&lt;/strong&gt;，同自然语言一样，完整的定义应包括&lt;strong&gt;语法&lt;/strong&gt;和&lt;strong&gt;语义&lt;/strong&gt;两个方面。&lt;/p&gt;
&lt;p&gt;语言的语法是指&lt;strong&gt;一组规则&lt;/strong&gt;，用它可以形成和产生一个合适的程序。语法规定了特定符号序列的合法性，而与符号的含义没有关系。任何程序设计语言都是某一基本符号集上的字符序列。&lt;/p&gt;
&lt;p&gt;对于语义的分析与处理到目前为止仍然没有公认的形式系统用于自动构造正确的编译程序。&lt;/p&gt;
&lt;h3 id=&#34;形式语言&#34;&gt;形式语言&lt;/h3&gt;
&lt;p&gt;形式语言（英语：Formal language）是用精确的数学或机器可处理的公式定义的语言。在形式语言理论中，形式语言是一个字母表上的某些有限长字符串的&lt;strong&gt;集合&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;每个形式语言都是某个字母表上按某种规则构成的所有符号的集合，反之，任何一个字母表上符号串的集合均可定义为一个形式语言，不涉及考虑语义问题。&lt;/p&gt;
&lt;h4 id=&#34;语言间的运算&#34;&gt;语言间的运算&lt;/h4&gt;
&lt;p&gt;因为形式语言在本质上是由数学定义的的集合，所以语言间的运算就是$Σ^*$幂集上的运算。与普通的集合数学运算无异。&lt;/p&gt;
&lt;h3 id=&#34;语言的表示方法&#34;&gt;语言的表示方法&lt;/h3&gt;
&lt;p&gt;从形式语言的角度看，一个语言也就是字符串集。如果字符串集是有穷的，可以用枚举的办法表示出来。
例如，设有字母表 $A={a,b,c}$，则&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
&amp;amp;L_1 = {a,b,c}\cr
&amp;amp;L_2 = {a,aa,ab,ac}\cr
&amp;amp;L_3 = {c,cc}
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;均表示字母表A上的一个形式语言。&lt;/p&gt;
&lt;p&gt;当集合无穷时，&lt;del&gt;我们可以使用无限猴子定理&lt;/del&gt;枚举的办法就不行了，需要寻找合适的有穷表示方法——&lt;strong&gt;文法&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;除形式文法外，语言也可使用正则表达式或某些自动机表示，在本章暂不讨论。&lt;/p&gt;
&lt;h2 id=&#34;文法&#34;&gt;文法&lt;/h2&gt;
&lt;p&gt;在形式语言理论中，文法（为了避免歧义，常称作“形式文法”）是形式语言中字符串的一套产生式规则。这些规则描述了如何用语言的字母表生成符合语法的有效的字符串。文法不描述字符串的含义，也不描述在任何上下文中可以用它们做什么——只描述它们的形式。
形式文法是从一个“开始符号”出发的一套重写字符串的规则。因此，文法通常被认为是语言生成器。&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;ps: 形式语言理论是应用数学的一个分支，是研究形式文法和语言的学科。&lt;/p&gt;
&lt;h3 id=&#34;规则&#34;&gt;规则&lt;/h3&gt;
&lt;p&gt;我们以汉语句子的文法为例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;句子 → 主语·谓语

主语 → 代词∣名词

代词 → 我∣你∣他

名词 → 司机∣农民∣学生∣汽车∣锄头

谓语 → 动词·直接宾语

动词 → 学习∣拿起∣开

直接宾语 → 代词∣名词
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其上的每一条被称为&lt;strong&gt;产生式&lt;/strong&gt;或&lt;strong&gt;语法规则&lt;/strong&gt;，符号“→”也可以写成“∷=”，表示“被定义为”。&lt;/p&gt;
&lt;p&gt;符号“·”和“∣”是集合运算符号，“·”表示“连接”，该符号往往被省略，“∣”表示“或”，该符号两边的符号串称候选串。&lt;/p&gt;
&lt;p&gt;由上面的规则可以&lt;strong&gt;产生或推导出句子&lt;/strong&gt;，引进符号“=&amp;gt;”表示推导，比如句子“农民拿起锄头”的推导过程为：句子=&amp;gt;主语·谓语=&amp;gt;名词·谓语=&amp;gt;农民·谓语=&amp;gt;农民·动词·直接宾语=&amp;gt;农民·拿起·直接宾语=&amp;gt;农民·拿起·名词=&amp;gt;农民拿起锄头&lt;/p&gt;
&lt;h2 id=&#34;形式定义&#34;&gt;形式定义&lt;/h2&gt;
&lt;p&gt;接下来我们以数学为工具，利用符号和公式，精确地定义文法和语言。&lt;/p&gt;
&lt;h3 id=&#34;文法的形式定义&#34;&gt;文法的形式定义&lt;/h3&gt;
&lt;p&gt;文法是规则的&lt;strong&gt;非空&lt;/strong&gt;有穷集合。其形式定义为四元组$G[S]=(V_N,V_T,P,S)$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$V_N$是规则中非终结符号的集合。&lt;/li&gt;
&lt;li&gt;$V_T$是规则中终结符号的集合，显然文法在这里结束。&lt;/li&gt;
&lt;li&gt;P是文法规则的合集。&lt;/li&gt;
&lt;li&gt;S是一个非终结符号，显然文法从这里开始。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;语言的形式定义&#34;&gt;语言的形式定义&lt;/h3&gt;
&lt;p&gt;当一个文法已知时，我们可以确定出该文法所定义的语言，但在此之前我们需要先弄明白什么是句子，这里我们需要引入推导的概念。&lt;/p&gt;
&lt;h4 id=&#34;推导&#34;&gt;推导&lt;/h4&gt;
&lt;p&gt;如果存在一个直接推导序列&lt;/p&gt;
&lt;p&gt;$$
a_0 \Rightarrow a_1 \Rightarrow a_2 \Rightarrow \dots \Rightarrow a_n
$$&lt;/p&gt;
&lt;p&gt;则称这个序列是$a_0$到$a_n$的长度为n的推导，记为$a_0\stackrel{+}{\Rightarrow}a_n$。&lt;/p&gt;
&lt;p&gt;表示从$a_0$出发，经过1到n步可以推导出$a_n$。&lt;/p&gt;
&lt;h4 id=&#34;广义推导&#34;&gt;广义推导&lt;/h4&gt;
&lt;p&gt;广义推导的符号为$\stackrel{*}{\Rightarrow}$&lt;/p&gt;
&lt;p&gt;$a_0 \stackrel{*}{\Rightarrow} a_n$表示从$a_0$出发，经过0到n步可以推导出$a_n$。&lt;/p&gt;
&lt;h4 id=&#34;句型与句子&#34;&gt;句型与句子&lt;/h4&gt;
&lt;p&gt;对于文法 $G[S]$，如果&lt;/p&gt;
&lt;p&gt;$$
S \stackrel{*}{\Rightarrow} x
$$&lt;/p&gt;
&lt;p&gt;称符号串x为文法 $G[S]$ 的句型。&lt;/p&gt;
&lt;p&gt;$$
S \stackrel{*}{\Rightarrow}x, x∈V_T^*
$$&lt;/p&gt;
&lt;p&gt;则称符号串x是文法$G[S]$的句子。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;有了以上概念后，我们可以给出语言的形式定义：&lt;/p&gt;
&lt;p&gt;文法 $G[S]$ 产生的所有句子的集合称为文法G所定义的语言，记为$L(G[S])$&lt;/p&gt;
&lt;p&gt;$$
L(G[S])={x|S\stackrel{+}{\Rightarrow}x,x∈V_T^*}
$$&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;编译原理 刘铭、徐兰芳等｜电子工业出版社&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;维基百科 &lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/wiki/%e5%bd%a2%e5%bc%8f%e6%96%87%e6%b3%95&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;形式文法&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
        </item>
        <item>
        <title>使用 JavaScript 实现一个基于 FSM 的 http 请求头 parser</title>
        <link>https://blog.frostmiku.com/archives/17/</link>
        <pubDate>Mon, 17 Feb 2020 16:20:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/17/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/17/fsm.jpg" alt="Featured image of post 使用 JavaScript 实现一个基于 FSM 的 http 请求头 parser" /&gt;&lt;h2 id=&#34;目标&#34;&gt;目标&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;HTTP/1.1 200 OK
Server: nginx
Date: Sun, 05 Jan 2020 17:39:08 GMT
Content-Type: text/html; charset=UTF-8
Connection: close
Vary: Accept-Encoding
X-Powered-By: PHP/5.6.10
Content-Length: 6

123Abc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ndash;&amp;gt; parse &amp;ndash;&amp;gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;reqline&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;HTTP/1.1 200 OK&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nt&#34;&gt;&amp;#34;headers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
       &lt;span class=&#34;nt&#34;&gt;&amp;#34;server&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;nginx&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Sun, 05 Jan 2020 17:39:08 GMT&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;content-type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;connection&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;close&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;vary&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Accept-Encoding&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;x-powered-by&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;PHP/5.6.10&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nt&#34;&gt;&amp;#34;content-length&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;6&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
     &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;s2&#34;&gt;&amp;#34;body&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;123Abc&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;状态机&#34;&gt;状态机&lt;/h2&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 129; flex-basis: 310px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/17/fsm.jpg&#34; data-size=&#34;2500x1932&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/17/fsm.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/17/fsm_hu978e07731c4925ec022eae0a092b1149_264193_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/17/fsm_hu978e07731c4925ec022eae0a092b1149_264193_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;2500&#34;
				height=&#34;1932&#34;
				loading=&#34;lazy&#34;
				alt=&#34;http parser fsm&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;http parser fsm&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;代码实现&#34;&gt;代码实现&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;httpParser&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Stream&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prototype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hasNext&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;Stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prototype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;BEGIN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;LINE_ALMOST_DONE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;LINE_DONE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;KEY_DONE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;HEADER_ALMOST_DONE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;HEADER_DONE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;END&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;httpParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;BEGIN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;updateState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;st&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;httpParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;st&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;currentState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;httpParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;nx&#34;&gt;httpParser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parse&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;updateState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;BEGIN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;headers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{};&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;lastword&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stream&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;currentState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;BEGIN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;c1&#34;&gt;// they might be just sending \n instead of \r\n so this would be
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;// the second \n to denote the end of headers
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;updateState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LINE_ALMOST_DONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;reqline&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                    &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LINE_ALMOST_DONE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;updateState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LINE_DONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LINE_DONE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;updateState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;KEY_DONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;lastword&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;updateState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;HEADER_ALMOST_DONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;lastword&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                    &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;KEY_DONE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\r&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;updateState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LINE_ALMOST_DONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;headers&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;lastword&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toLowerCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;lastword&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                        &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;HEADER_ALMOST_DONE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;updateState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;HEADER_DONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;c1&#34;&gt;//Need to optimize
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;STATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;HEADER_DONE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;hasNext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()){&lt;/span&gt;
                        &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;stream&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
                    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                    &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;body&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;nx&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Arch Linux (Manjaro) 配置、美化与常用软件安装指南（</title>
        <link>https://blog.frostmiku.com/archives/14/</link>
        <pubDate>Sat, 30 Nov 2019 19:06:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/14/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/14/gnome.jpg" alt="Featured image of post Arch Linux (Manjaro) 配置、美化与常用软件安装指南（" /&gt;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;之前就一直有在用Manjaro，主要是自己懒得安装Arch Linux，最近看 &lt;a class=&#34;link&#34; href=&#34;https://blog.kaaass.net/archives/1205&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;@KAAAsS&lt;/a&gt;写了一篇KDE桌面环境的Manjaro配置，没忍住就装了一个，结果KDE和我还是不太兼容（&lt;/p&gt;
&lt;p&gt;所以我就跑过来写一篇Gnome的同名文章，嘿嘿。&lt;/p&gt;
&lt;p&gt;欢迎邮件联系 &lt;a class=&#34;link&#34; href=&#34;mailto:i@frostmiku.com&#34; &gt;i@frostmiku.com&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;注意&#34;&gt;注意&lt;/h6&gt;
&lt;p&gt;本文作如下约定：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如无特别说明，本文的**&amp;ldquo;安装&amp;rdquo;**是指使用pacman包管理器命令或其图形化前端在**已添加archlinuxcn源**情况下进行的软件包安装**或**AUR构建。&lt;/p&gt;
&lt;p&gt;如无特别说明，本文的**“编辑”**指的是使用任何图形或非图形化文本编辑器对目标文件的编辑。Gnome环境下可以使用 sudo gedit path 来打开文件进行编辑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;h3 id=&#34;软件源与镜像&#34;&gt;软件源与镜像&lt;/h3&gt;
&lt;p&gt;减少重复造轮子，请移步这里：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.kaaass.net/archives/1205#toc-4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.kaaass.net/archives/1205#toc-4&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;或者，你只是想快速完成这些步骤而不想详细了解的话：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#切换中国源
sudo pacman-mirrors -c China
#添加 [archlinuxcn]
sudo gedit /etc/pacman.conf
# 然后在弹出来的 gedit 最下方追加如下内容
[archlinuxcn]
SigLevel = Optional TrustedOnly
Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch

#更新软件源
pacman -Syy &amp;amp;&amp;amp; sudo pacman -S archlinuxcn-keyring
#安装 oh my zsh
sh -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&amp;quot;
# 重启
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;没有权限访问串口&#34;&gt;没有权限访问串口&lt;/h3&gt;
&lt;p&gt;不同于Debian系的dialout，arch系的串口属于用户组uucp
所以只需要将自己添加到uucp组即可。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo usermod -a -G uucp username
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;开启-gsconnect&#34;&gt;开启 GSConnect&lt;/h3&gt;
&lt;p&gt;gsconnect是kdeconnect的gnome实现，也就比kde的好用那么一点吧（滑稽&lt;/p&gt;
&lt;p&gt;在 优化》插件 里手动启动即可。&lt;/p&gt;
&lt;h2 id=&#34;软件&#34;&gt;软件&lt;/h2&gt;
&lt;h3 id=&#34;python2&#34;&gt;Python2&lt;/h3&gt;
&lt;p&gt;Manjaro自带了Python 2.7但并没有附带pip，需要我们手动安装&lt;/p&gt;
&lt;p&gt;安装python2-pip&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo pacman -S python2-pip 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装后在终端输入pip2即可使用&lt;/p&gt;
&lt;h3 id=&#34;字体&#34;&gt;字体&lt;/h3&gt;
&lt;p&gt;字体比较推荐等宽的 &lt;a class=&#34;link&#34; href=&#34;https://github.com/be5invis/Sarasa-Gothic&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;更纱黑体&lt;/a&gt; ，安装 Sarasa Gothic 然后在优化里设置即可。&lt;/p&gt;
&lt;h3 id=&#34;terminal&#34;&gt;Terminal&lt;/h3&gt;
&lt;h4 id=&#34;背景透明&#34;&gt;背景透明&lt;/h4&gt;
&lt;p&gt;gnome默认的Terminal并不支持背景透明&lt;/p&gt;
&lt;p&gt;AUR中构建 &lt;code&gt;gnome-terminal-transparency&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后在 设置》颜色 中将会出现透明度设置项&lt;/p&gt;
&lt;h4 id=&#34;oh-my-zsh&#34;&gt;oh-my-zsh&lt;/h4&gt;
&lt;p&gt;把oh-my-zsh归类到这里似乎有点奇怪&amp;hellip;&lt;/p&gt;
&lt;p&gt;这是我的&lt;a class=&#34;link&#34; href=&#34;https://github.com/FrostMiKu/MyLinuxRC/blob/master/.zshrc&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;zshrc&lt;/a&gt;仅供参考。&lt;/p&gt;
&lt;p&gt;ps：如果你要使用的话，需要另外安装ranger&lt;/p&gt;
&lt;h3 id=&#34;nautilus-文件管理器&#34;&gt;Nautilus 文件管理器&lt;/h3&gt;
&lt;h4 id=&#34;显示地址栏&#34;&gt;显示地址栏&lt;/h4&gt;
&lt;p&gt;可以使用快捷键 &lt;code&gt;ctrl + L&lt;/code&gt;也可以直接输入以**/**或 **~** 开头的地址。&lt;/p&gt;
&lt;p&gt;如果希望文件管理器默认显示地址栏，则打开dconf编辑器（可以直接在软件中心安装）
定位到&lt;code&gt;org-&amp;gt;gnome-&amp;gt;nautilus-&amp;gt;preferences&lt;/code&gt;然后选择&lt;code&gt;always-use-location-entry&lt;/code&gt;这一项即可。&lt;/p&gt;
&lt;h3 id=&#34;某知名electron科学软件&#34;&gt;某知名Electron科学软件&lt;/h3&gt;
&lt;h4 id=&#34;托盘不显示图标&#34;&gt;托盘不显示图标&lt;/h4&gt;
&lt;p&gt;这是electron的锅。&lt;/p&gt;
&lt;p&gt;安装 libappindicator-gtk3 解决&lt;/p&gt;
&lt;h4 id=&#34;切换代理设置不生效&#34;&gt;切换代理设置不生效&lt;/h4&gt;
&lt;p&gt;这个问题很少发生在gnome下，该软件使用gsettings进行设置，请检查gsettings是否存在问题。&lt;/p&gt;
&lt;h3 id=&#34;搜狗拼音&#34;&gt;搜狗拼音&lt;/h3&gt;
&lt;p&gt;不要安装fcitx，会报错的。&lt;br&gt;
安装fcitx-lilydjwg-git&lt;br&gt;
然后搜索sogou进行安装即可。&lt;/p&gt;
&lt;h3 id=&#34;qq&#34;&gt;QQ&lt;/h3&gt;
&lt;p&gt;最近腾讯更新了QQ for Linux，虽然用起来有种自己穿越回2009年的感觉。但基本功能倒是够用了。&lt;/p&gt;
&lt;p&gt;安装 qq-Linux 即可，它应该是在archlinuxcn仓库里。&lt;/p&gt;
&lt;h2 id=&#34;美化&#34;&gt;美化&lt;/h2&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 147; flex-basis: 354px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/14/settings.png&#34; data-size=&#34;1035x700&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/14/settings.png&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/14/settings_hue7565f078aa8a87a82bdd9c8b212eb3b_72441_480x0_resize_box_3.png 480w, https://blog.frostmiku.com/archives/14/settings_hue7565f078aa8a87a82bdd9c8b212eb3b_72441_1024x0_resize_box_3.png 1024w&#34;
				width=&#34;1035&#34;
				height=&#34;700&#34;
				loading=&#34;lazy&#34;
				alt=&#34;setting&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;setting&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;主题图标与字体&#34;&gt;主题、图标与字体&lt;/h3&gt;
&lt;p&gt;本文最上面的图片里以包括这些信息，防止看不清楚再列出：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WM Theme: Mojave-light-alt&lt;br&gt;
GTK Theme: Mojave-light-alt [GTK2/3]&lt;br&gt;
Icon Theme: McMojave-circle&lt;br&gt;
Font: Sarasa Gothic K 11&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;动态壁纸&#34;&gt;动态壁纸&lt;/h3&gt;
&lt;p&gt;安装 dynamic-wallpaper-catalina-gnome-timed-git&lt;/p&gt;
&lt;p&gt;然后在桌面右键，选择更换壁纸。&lt;/p&gt;
&lt;h3 id=&#34;dash-to-dock&#34;&gt;Dash to dock&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;-Dock Settings-&lt;/p&gt;
&lt;p&gt;-Run as, in terminal! one by one&amp;hellip;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Show Apps Button at Left&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Command:
gsettings set org.gnome.shell.extensions.dash-to-dock show-apps-at-top true&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Use Custom Dock Indicator&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Command:
gsettings set org.gnome.shell.extensions.dash-to-dock running-indicator-style DEFAULT
gsettings set org.gnome.shell.extensions.dash-to-dock custom-theme-customize-running-dots false&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Disable Custom Dock Shrink Mode&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Command:
gsettings set org.gnome.shell.extensions.dash-to-dock custom-theme-shrink false&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Change Dock Transparency mode&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Command:
gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode DEFAULT&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Disable Extend height!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Command:
gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Change Dock Pozition&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Command:
gsettings set org.gnome.shell.extensions.dash-to-dock dock-position BOTTOM&lt;/p&gt;
&lt;p&gt;-OK!-&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;-NOTE-: 
&lt;em&gt;if you have problem use this Restore to Default all settings.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;dconf reset -f /org/gnome/shell/extensions/dash-to-dock/&lt;/p&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.kaaass.net/archives/1205&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.kaaass.net/archives/1205&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>JavaScript 极速入门</title>
        <link>https://blog.frostmiku.com/archives/13/</link>
        <pubDate>Fri, 22 Nov 2019 21:55:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/13/</guid>
        <description>&lt;p&gt;欢迎来到 JavaScrip 极速入&lt;del&gt;坟&lt;/del&gt; 门
首先，先把廖雪峰前四章看完 （就是到 &lt;strong&gt;面向对象编程&lt;/strong&gt; 那一章&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.liaoxuefeng.com/wiki/1022910821149312&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;JavaScript教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接着去看一下这个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.frostmiku.com/archives/5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;理解 JavaScript 的 Proto 和 Prototype&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后就可以开始整活了：&lt;/p&gt;
&lt;p&gt;this&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 输出啥？
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 输出啥？
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;array&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// 现在 bar 里面是啥？
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;obj&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Uint8Array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;bar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// 现在 f.buf 里面是啥？
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;未完待续&amp;hellip;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Windows 蓝屏分析简明教程</title>
        <link>https://blog.frostmiku.com/archives/12/</link>
        <pubDate>Sun, 17 Nov 2019 16:00:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/12/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/12/windows.jpg" alt="Featured image of post Windows 蓝屏分析简明教程" /&gt;&lt;h2 id=&#34;前言--工具准备&#34;&gt;前言 &amp;amp; 工具准备&lt;/h2&gt;
&lt;p&gt;今天室友的电脑蓝屏了&amp;hellip; &lt;del&gt;虽然以前就经常发生&lt;/del&gt;
所以我们来康康是怎么回事！&lt;/p&gt;
&lt;h3 id=&#34;工欲善其事必先利其器&#34;&gt;工欲善其事，必先利其器&lt;/h3&gt;
&lt;p&gt;在 Microsoft Store 上获取 &lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/store/productId/9PGJGD53TN86&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;windbg&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;简明操作流程&#34;&gt;简明操作流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在 WinDbg 界面上的 &lt;strong&gt;文件&lt;/strong&gt; 菜单中选择 &lt;strong&gt;Settings&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;strong&gt;Debugging settings&lt;/strong&gt; 选项卡的 &lt;strong&gt;Symbol path&lt;/strong&gt; 栏中输入&lt;code&gt;SRV*c:\temp*http://msdl.microsoft.com/download/symbols&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;接着 &lt;strong&gt;文件&lt;/strong&gt; 菜单中选择 &lt;strong&gt;open dump file&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;然后浏览并选择打开 &lt;strong&gt;minidump&lt;/strong&gt; 目录下的文件，一般路径为：&lt;code&gt;C:\Windows\Minidump\XXXXXX-XXXX-XX.dmp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;等待系统下载 Symbol 并分析完毕&lt;/li&gt;
&lt;li&gt;当出现 &lt;code&gt;Use !analyze -v to get detailed debugging information&lt;/code&gt; 时,在下面输入框：&lt;code&gt;!analyze –v&lt;/code&gt; 或直接点击 &lt;code&gt;!analyze –v&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;此时会出现类似如下的信息：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;*******************************************************************************
*                                                                             *
*                        Bugcheck Analysis                                    *
*                                                                             *
*******************************************************************************

PAGE_FAULT_IN_NONPAGED_AREA (50)
Invalid system memory was referenced.  This cannot be protected by try-except.
Typically the address is just plain bad or it is pointing at freed memory.
Arguments:
Arg1: ffff8289b2e75b90, memory referenced.
Arg2: 0000000000000011, value 0 = read operation, 1 = write operation.
Arg3: ffff8289b2e75b90, If non-zero, the instruction address which referenced the bad memory
	address.
Arg4: 0000000000000002, (reserved)

Debugging Details:
------------------


Could not read faulting driver name

KEY_VALUES_STRING: 1

    Key  : Analysis.CPU.Sec
    Value: 2

    Key  : Analysis.DebugAnalysisProvider.CPP
    Value: Create: 8007007e on ELUXWORKSTATION

    Key  : Analysis.DebugData
    Value: CreateObject

    Key  : Analysis.DebugModel
    Value: CreateObject

    Key  : Analysis.Elapsed.Sec
    Value: 2

    Key  : Analysis.Memory.CommitPeak.Mb
    Value: 90

    Key  : Analysis.System
    Value: CreateObject


DUMP_FILE_ATTRIBUTES: 0x8
  Kernel Generated Triage Dump

BUGCHECK_CODE:  50

BUGCHECK_P1: ffff8289b2e75b90

BUGCHECK_P2: 11

BUGCHECK_P3: ffff8289b2e75b90

BUGCHECK_P4: 2

WRITE_ADDRESS: fffff8057fd733b8: Unable to get MiVisibleState
Unable to get NonPagedPoolStart
Unable to get NonPagedPoolEnd
Unable to get PagedPoolStart
Unable to get PagedPoolEnd
fffff8057fc2a3c8: Unable to get Flags value from nt!KdVersionBlock
fffff8057fc2a3c8: Unable to get Flags value from nt!KdVersionBlock
unable to get nt!MmSpecialPagesInUse
 ffff8289b2e75b90 

MM_INTERNAL_CODE:  2

BLACKBOXBSD: 1 (!blackboxbsd)


BLACKBOXNTFS: 1 (!blackboxntfs)


BLACKBOXWINLOGON: 1

CUSTOMER_CRASH_COUNT:  1

PROCESS_NAME:  LEDKeeper.exe

TRAP_FRAME:  ffffd48056b48300 -- (.trap 0xffffd48056b48300)
NOTE: The trap frame does not contain all registers.
Some register values may be zeroed or incorrect.
rax=00000000c000000d rbx=0000000000000000 rcx=0000000080000000
rdx=000000000000004e rsi=0000000000000000 rdi=0000000000000000
rip=ffff8289b2e75b90 rsp=ffffd48056b48498 rbp=fffff8057fea711b
 r8=0000000000000000  r9=ffffd48056b48438 r10=0000000000000011
r11=0000000000000011 r12=0000000000000000 r13=0000000000000000
r14=0000000000000000 r15=0000000000000000
iopl=0         nv up ei ng nz ac po nc
ffff8289`b2e75b90 fe              ???
Resetting default scope

STACK_TEXT:  
ffffd480`56b48058 fffff805`7f9e35d6 : 00000000`00000050 ffff8289`b2e75b90 00000000`00000011 ffffd480`56b48300 : nt!KeBugCheckEx
ffffd480`56b48060 fffff805`7f872eef : ffffa404`f90f6c50 00000000`00000011 00000000`00000000 ffff8289`b2e75b90 : nt!MiSystemFault+0x1d6866
ffffd480`56b48160 fffff805`7f9cf520 : 00000000`00000001 fffff805`7fe1feb3 00000000`000000cb 00000000`00000001 : nt!MmAccessFault+0x34f
ffffd480`56b48300 ffff8289`b2e75b90 : fffff805`7fdebe01 00000000`00000000 ffff8289`00000000 ffff8289`00000800 : nt!KiPageFault+0x360
ffffd480`56b48498 fffff805`7fdebe01 : 00000000`00000000 ffff8289`00000000 ffff8289`00000800 fffff805`7ff89b00 : 0xffff8289`b2e75b90
ffffd480`56b484a0 00000000`00000000 : 00000000`00000000 ffff8289`00000000 00000000`00000000 00000000`00000000 : nt!ObpIncrementHandleCountEx+0x271


SYMBOL_NAME:  nt!MiSystemFault+1d6866

MODULE_NAME: nt

IMAGE_VERSION:  10.0.18362.476

STACK_COMMAND:  .thread ; .cxr ; kb

IMAGE_NAME:  memory_corruption

BUCKET_ID_FUNC_OFFSET:  1d6866

FAILURE_BUCKET_ID:  AV_INVALID_nt!MiSystemFault

OSPLATFORM_TYPE:  x64

OSNAME:  Windows 10

FAILURE_ID_HASH:  {8a33c6b1-a9f1-4efe-025b-a861cc33d6e2}

Followup:     MachineOwner
---------

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通常情况下，我们只需要关注&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PROCESS_NAME:  XXXXXXX
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这一行即可大致确定引起系统蓝屏的原因。
比如本次分析中蓝屏是由 &lt;strong&gt;LEDKeeper.exe&lt;/strong&gt; 所引起。
通过搜索我们可以得知它属于 &lt;strong&gt;MSI MysticLight&lt;/strong&gt;。
这是一个微星主板的灯光控制软件，没啥子用。直接卸载！
到这里，基本上已经分析结束了。&lt;strong&gt;要么解决问题，要么果断放弃。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;更详细的信息可以输入 &lt;code&gt;!process&lt;/code&gt; 来查看:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;5: kd&amp;gt; !process
PROCESS ffff8289b44c4080
    SessionId: none  Cid: 1d10    Peb: 00734000  ParentCid: 0578
    DirBase: 130af8000  ObjectTable: ffffa404def9bc00  HandleCount: &amp;lt;Data Not Accessible&amp;gt;
    Image: LEDKeeper.exe
    VadRoot ffff8289b79cbb70 Vads 325 Clone 0 Private 5560. Modified 5514. Locked 485.
    DeviceMap ffffa404da1d3190
    Token                             ffffa404df09a770
    ReadMemory error: Cannot get nt!KeMaximumIncrement value.
fffff78000000000: Unable to get shared data
    ElapsedTime                       00:00:00.000
    UserTime                          00:00:00.000
    KernelTime                        00:00:00.000
    QuotaPoolUsage[PagedPool]         610016
    QuotaPoolUsage[NonPagedPool]      47632
    Working Set Sizes (now,min,max)  (5089, 50, 345) (20356KB, 200KB, 1380KB)
    PeakWorkingSetSize                15214
    VirtualSize                       429 Mb
    PeakVirtualSize                   460 Mb
    PageFaultCount                    33009
    MemoryPriority                    BACKGROUND
    BasePriority                      6
    CommitCharge                      12664
    Job                               ffff8289b304f060

        *** Error in reading nt!_ETHREAD @ ffff8289b4473080
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>Windows 10 1903 and Later 搜索中心居中脚本</title>
        <link>https://blog.frostmiku.com/archives/11/</link>
        <pubDate>Mon, 11 Nov 2019 23:15:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/11/</guid>
        <description>&lt;p&gt;&lt;del&gt;网上冲浪时&lt;/del&gt;看到的一个有意思的 powershell 脚本。
在这里记录一下&lt;/p&gt;
&lt;p&gt;首先更改策略允许执行powershell脚本&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;set-ExecutionPolicy RemoteSigned
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后执行如下脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$BASE_PATH&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;HKCU:\Software\Microsoft\Windows\CurrentVersion\Search&amp;#39;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$RADIUS_PATH&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;$BASE_PATH\Flighting\Override&amp;#34;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CustimizedNewItemProperty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$Path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$null&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-ItemProperty&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Path&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Path&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Name&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-PropertyType&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DWord&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Value&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Value&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ToCenter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$Radius&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$null&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ToDefault&lt;/span&gt;
    &lt;span class=&#34;nv&#34;&gt;$null&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;New-Item&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-ItemType&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Path&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$RADIUS_PATH&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;CustimizedNewItemProperty&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$BASE_PATH&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ImmersiveSearch&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;CustimizedNewItemProperty&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$RADIUS_PATH&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ImmersiveSearchFull&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;CustimizedNewItemProperty&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$RADIUS_PATH&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CenterScreenRoundedCornerRadius&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$Radius&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;设置成功&amp;#39;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ToDefault&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Test-Path&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Path&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$RADIUS_PATH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$null&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Remove-Item&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Path&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$RADIUS_PATH&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Recurse&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Force&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$null&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-ne&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Get-ItemProperty&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Path&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$BASE_PATH&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Select-String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Pattern&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ImmersiveSearch&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;$null&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Remove-ItemProperty&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Path&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$BASE_PATH&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Name&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ImmersiveSearch&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;-Force&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;恢复完成&amp;#39;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Menu&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nb&#34;&gt;Clear-Host&lt;/span&gt;
    &lt;span class=&#34;sh&#34;&gt;@&amp;#34;
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;----------------------------
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;  Windows 10 1903 and Later
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;       Search 居中脚本
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;            V0.01 2019.10.02
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;                @AUTHOR LOGI
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;----------------------------
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;0. 退出
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;1. 居中
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;2. 恢复
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;----------------------------
&lt;/span&gt;&lt;span class=&#34;sh&#34;&gt;&amp;#34;@&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Read-Host&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;请选择&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Exit&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
            &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;ToCenter&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;[int]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;Read-Host&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;请输入圆角大小（0-10）&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;ToCenter&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ToDefault&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;Default&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Menu&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Menu&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;----------------------------&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;请按任意键继续...&amp;#39;&lt;/span&gt;
    &lt;span class=&#34;no&#34;&gt;[void][System.Console]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ReadKey&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;原文链接： &lt;a class=&#34;link&#34; href=&#34;https://logi.ml/script/center-win10-search-ui.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://logi.ml/script/center-win10-search-ui.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Whisper 样式一览</title>
        <link>https://blog.frostmiku.com/archives/10/</link>
        <pubDate>Thu, 07 Nov 2019 23:13:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/10/</guid>
        <description>&lt;img src="https://blog.frostmiku.com/archives/10/helena-hertz-wWZzXlDpMog-unsplash.jpg" alt="Featured image of post Whisper 样式一览" /&gt;&lt;h1 id=&#34;一级标题&#34;&gt;一级标题&lt;/h1&gt;
&lt;p&gt;你不应当考虑在文本中使用一级标题，这是一种错误的做法。
另外，这段话是普通文本。&lt;/p&gt;
&lt;h2 id=&#34;二级标题&#34;&gt;二级标题&lt;/h2&gt;
&lt;h3 id=&#34;三级标题&#34;&gt;三级标题&lt;/h3&gt;
&lt;h4 id=&#34;四级标题&#34;&gt;四级标题&lt;/h4&gt;
&lt;h5 id=&#34;五级标题&#34;&gt;五级标题&lt;/h5&gt;
&lt;h6 id=&#34;六级标题&#34;&gt;六级标题&lt;/h6&gt;
&lt;p&gt;虽然目录对于标题的索引只支持到五级。
但你依然可以在文章中使用六级标题。
这在创建希望引起注意的长文本时会很好用。&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;
请注意！该标题不宜过长。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;引言块&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* 代码块 */&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;$$
\lim_{x \to \infty} \exp(-x) = 0
$$&lt;/p&gt;
&lt;p&gt;这是一条行内公式$AB＝{xy|x∈A,y∈B }$&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;商品&lt;/th&gt;
&lt;th&gt;价格&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;猪肉&lt;/td&gt;
&lt;td&gt;∞&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;节操&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 66; flex-basis: 160px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/10/florian-klauer-nptLmg6jqDo-unsplash.jpg&#34; data-size=&#34;667x1000&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/10/florian-klauer-nptLmg6jqDo-unsplash.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/10/florian-klauer-nptLmg6jqDo-unsplash_hu595aaf3b3dbbb41af5aed8d3958cc9f9_13854_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/10/florian-klauer-nptLmg6jqDo-unsplash_hu595aaf3b3dbbb41af5aed8d3958cc9f9_13854_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;667&#34;
				height=&#34;1000&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Photo by Florian Klauer on Unsplash&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Photo by Florian Klauer on Unsplash&lt;/figcaption&gt;
		
	&lt;/figure&gt;  &lt;figure style=&#34;flex-grow: 149; flex-basis: 359px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/10/luca-bravo-alS7ewQ41M8-unsplash.jpg&#34; data-size=&#34;1000x667&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/10/luca-bravo-alS7ewQ41M8-unsplash.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/10/luca-bravo-alS7ewQ41M8-unsplash_hu0a3f1163de68d0b9471979ebf0ecf11e_32400_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/10/luca-bravo-alS7ewQ41M8-unsplash_hu0a3f1163de68d0b9471979ebf0ecf11e_32400_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;1000&#34;
				height=&#34;667&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Photo by Luca Bravo on Unsplash&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Photo by Luca Bravo on Unsplash&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 133; flex-basis: 320px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/10/helena-hertz-wWZzXlDpMog-unsplash.jpg&#34; data-size=&#34;1000x750&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/10/helena-hertz-wWZzXlDpMog-unsplash.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/10/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/10/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;1000&#34;
				height=&#34;750&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Photo by Helena Hertz on Unsplash&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Photo by Helena Hertz on Unsplash&lt;/figcaption&gt;
		
	&lt;/figure&gt;  &lt;figure style=&#34;flex-grow: 66; flex-basis: 160px&#34;&gt;
		&lt;a href=&#34;https://blog.frostmiku.com/archives/10/hudai-gayiran-3Od_VKcDEAA-unsplash.jpg&#34; data-size=&#34;667x1000&#34;&gt;&lt;img src=&#34;https://blog.frostmiku.com/archives/10/hudai-gayiran-3Od_VKcDEAA-unsplash.jpg&#34;
				srcset=&#34;https://blog.frostmiku.com/archives/10/hudai-gayiran-3Od_VKcDEAA-unsplash_hub241c2a9c7a2caf7e16a2a5bbc7141ff_18711_480x0_resize_q75_box.jpg 480w, https://blog.frostmiku.com/archives/10/hudai-gayiran-3Od_VKcDEAA-unsplash_hub241c2a9c7a2caf7e16a2a5bbc7141ff_18711_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;667&#34;
				height=&#34;1000&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Photo by Hudai Gayiran on Unsplash&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Photo by Hudai Gayiran on Unsplash&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有序&lt;/li&gt;
&lt;li&gt;列表&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;无序&lt;/li&gt;
&lt;li&gt;列表&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;中文和English之间会自动插入空格符！&lt;/p&gt;
&lt;p&gt;这里是&lt;strong&gt;加粗&lt;/strong&gt;，&lt;em&gt;斜体&lt;/em&gt;，和&lt;del&gt;删除&lt;/del&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;del&gt;当然，你也可以把它们同时应用！&lt;/del&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;下面是&lt;code&gt;分割线&lt;/code&gt; 当你文章存在脚注时会自动生成这条分割线&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;这是一条脚注。当然，你也可以把它当作Reference来用～&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
        </item>
        <item>
        <title>QuickMCU 帮助文档</title>
        <link>https://blog.frostmiku.com/archives/6/</link>
        <pubDate>Wed, 06 Nov 2019 15:38:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/6/</guid>
        <description>&lt;p&gt;&lt;strong&gt;本文已严重过时！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里是 QuickMCU 的非正式文档。&lt;/p&gt;
&lt;p&gt;波特率 115200。&lt;/p&gt;
&lt;p&gt;内部 repl shell VT100（使用 PuTTY 连接就行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;函数内部会对参数类型进行自动转换，多数情况下可以良好的运行。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对应缺失的参数默认会使用 0 或 undefined 代替。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;启动流程&#34;&gt;启动流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;自检&lt;/li&gt;
&lt;li&gt;打印板子基本信息&lt;/li&gt;
&lt;li&gt;执行内部 JavaScript 代码&lt;/li&gt;
&lt;li&gt;挂载 spiffs 文件系统并打印用量信息&lt;/li&gt;
&lt;li&gt;执行 &lt;code&gt;/c/boot.js&lt;/code&gt; 文件中的 JavaScript 代码（如果存在&lt;/li&gt;
&lt;li&gt;启动 repl （read-eval-print loop）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;global&#34;&gt;Global&lt;/h2&gt;
&lt;h3 id=&#34;settimeoutfunctimeoutarg&#34;&gt;setTimeout(func,timeout,arg)&lt;/h3&gt;
&lt;p&gt;和写web时的用法一样。&lt;/p&gt;
&lt;h3 id=&#34;setintervalfunctimeoutarg&#34;&gt;setInterval(func,timeout,arg)&lt;/h3&gt;
&lt;p&gt;和写web时的用法一样。&lt;/p&gt;
&lt;h3 id=&#34;printstr&#34;&gt;print(str)&lt;/h3&gt;
&lt;p&gt;打印输出str，参数可以为任何类型（会被自动转换为字符串）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无返回值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;所有module都是全局中的一个object。&lt;/em&gt;
&lt;em&gt;如无特殊说明，module 在全局中的名称皆为：&lt;/em&gt;
&lt;em&gt;下文中&lt;strong&gt;二级标题&lt;/strong&gt;的全小写字母。&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;os&#34;&gt;OS&lt;/h2&gt;
&lt;p&gt;提供系统接口&lt;/p&gt;
&lt;h3 id=&#34;function&#34;&gt;Function&lt;/h3&gt;
&lt;h4 id=&#34;sleepmsms&#34;&gt;sleepMs(ms)&lt;/h4&gt;
&lt;p&gt;使 JavaScript runtime 暂停指定时间，如无必要不建议使用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ms: 整数，sleep的时间，毫秒单位&lt;/p&gt;
&lt;p&gt;无返回值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;gettickcountms&#34;&gt;getTickCountMs()&lt;/h4&gt;
&lt;p&gt;返回开机到现在所经历的时间，毫秒单位。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;返回整数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;getfreemem&#34;&gt;getFreeMem()&lt;/h4&gt;
&lt;p&gt;返回剩余内存。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;返回整数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;file&#34;&gt;File&lt;/h2&gt;
&lt;p&gt;提供对文件系统的访问。&lt;/p&gt;
&lt;p&gt;QuickMCU 使用 spiffs 作为文件系统。&lt;/p&gt;
&lt;p&gt;文件前缀为 &lt;code&gt;/c/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;板子在启动时会自动执行 &lt;code&gt;/c/boot.js&lt;/code&gt; 文件内的 JavaScript 代码。&lt;/p&gt;
&lt;h3 id=&#34;function-1&#34;&gt;Function&lt;/h3&gt;
&lt;h4 id=&#34;openfilenamemode&#34;&gt;open(filename,mode)&lt;/h4&gt;
&lt;p&gt;打开一个文件，用于对文件进行操作。&lt;/p&gt;
&lt;p&gt;当文件对象失去所有引用后会自动调用 close 方法关闭文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;filename: 字符串，文件完整路径名。&lt;/p&gt;
&lt;p&gt;mode: 字符串，POSIX标准的文件操作模式 e.g. w r w+ a&amp;hellip;&lt;/p&gt;
&lt;p&gt;返回 File Object&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;removefilename&#34;&gt;remove(filename)&lt;/h4&gt;
&lt;p&gt;删除指定文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;filename: 字符串，文件完整路径名&lt;/p&gt;
&lt;p&gt;返回错误码，0 为删除成功&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;existsfilename&#34;&gt;exists(filename)&lt;/h4&gt;
&lt;p&gt;检测指定文件是否存在。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;filename: 字符串，文件完整路径名&lt;/p&gt;
&lt;p&gt;返回布尔值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;const&#34;&gt;CONST&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;EOF&lt;/th&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;EOF&lt;/td&gt;
&lt;td&gt;文件结尾标识符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SEEK_SET&lt;/td&gt;
&lt;td&gt;文件开头位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SEEK_CUR&lt;/td&gt;
&lt;td&gt;文件当前位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SEEK_END&lt;/td&gt;
&lt;td&gt;文件结尾位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;file-object&#34;&gt;File Object&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;fp:pointer,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;filename:&amp;#39;str&amp;#39;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;mode:&amp;#39;str&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;close&#34;&gt;close()&lt;/h4&gt;
&lt;p&gt;关闭文件对象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;返回错误码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;readsize&#34;&gt;read(size)&lt;/h4&gt;
&lt;p&gt;从文件读取，size参数可选，不填默认读取整个文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;size: 整数，从当前位置向后读取 size 个字符&lt;/p&gt;
&lt;p&gt;返回字符串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;readline&#34;&gt;readLine()&lt;/h4&gt;
&lt;p&gt;从文件当前位置读取一整行，超过1024个字符将会截断。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;返回字符串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;readlines&#34;&gt;readLines()&lt;/h4&gt;
&lt;p&gt;像 readLine() 但会读取整个文件，以字符串数组形式返回，每个元素都是一行文本。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;返回数组&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;writestr&#34;&gt;write(str)&lt;/h4&gt;
&lt;p&gt;将 str 写入文件中，object必须为可写的模式打开。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;被写入的文本会优先存入内部 buf ，只有在调用 close 或 flush 时才会写入文件&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;str: 字符串，待写入文本&lt;/p&gt;
&lt;p&gt;返回错误码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;seekoffsetbase&#34;&gt;seek(offset,base)&lt;/h4&gt;
&lt;p&gt;设置当前文件位置为 base+offset, 省略所有参数&lt;code&gt;seek()&lt;/code&gt;可以快速的将当前文件位置设置为文件头部。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;offset: 整数，相对位置&lt;/p&gt;
&lt;p&gt;base: 常数，文件位置，参看 CONST&lt;/p&gt;
&lt;p&gt;返回错误码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;tell&#34;&gt;tell()&lt;/h4&gt;
&lt;p&gt;返回当前文件位置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;返回整数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;flush&#34;&gt;flush()&lt;/h4&gt;
&lt;p&gt;强制立刻将缓冲区的内容写入文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;返回错误码&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>理解 JavaScript 的 Proto 和 Prototype</title>
        <link>https://blog.frostmiku.com/archives/5/</link>
        <pubDate>Wed, 06 Nov 2019 15:36:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/5/</guid>
        <description>&lt;p&gt;__proto__ 是 object 的一个属性，prototype 是 function 的一个属性。&lt;/p&gt;
&lt;p&gt;__proto__ 指向它的构造函数的 prototype, prototype指向一个constructor为该 function 的 object.&lt;/p&gt;
&lt;p&gt;所以 __proto__ 也有自己的 __proto__ ，也就是原型链。&lt;/p&gt;
&lt;h2 id=&#34;原型链&#34;&gt;原型链&lt;/h2&gt;
&lt;p&gt;当请求一个对象的属性时，首先会在对象内部寻找，如果不存在，则会到 __proto__ 中查找，如果不存在，就会查找 __proto__ 的 __proto__ ，直到 null 为止。&lt;/p&gt;
&lt;h2 id=&#34;实例化对象过程&#34;&gt;实例化对象过程&lt;/h2&gt;
&lt;p&gt;进行 new Foo() 操作会进行以下过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先会初始化一个空 {}&lt;/li&gt;
&lt;li&gt;然后将 {} 的 __proto__ 指向 Foo 的 prototype&lt;/li&gt;
&lt;li&gt;接着执行 Base.call({}) 将 this 作用域交予 {}&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>安装用于 CTF 的 Manjaro</title>
        <link>https://blog.frostmiku.com/archives/4/</link>
        <pubDate>Wed, 06 Nov 2019 15:30:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/4/</guid>
        <description>&lt;p&gt;&lt;del&gt;对计算机科学幻灭之后&lt;/del&gt;（update:我觉得我又彳亍了），我决定去学信息安全。&lt;/p&gt;
&lt;p&gt;于是有了在虚拟机里安装一个Linux的需求&amp;hellip;&lt;/p&gt;
&lt;p&gt;在此记录一下我初次的环境建立过程，方便未来可能需要的环境重建（倒不如直接写成脚本..&lt;/p&gt;
&lt;h2 id=&#34;发行版选择&#34;&gt;发行版选择&lt;/h2&gt;
&lt;p&gt;Linux 发行版选择的是 Manjaro Xfce，为什么选择这个发行版呢？&lt;/p&gt;
&lt;p&gt;（VMware Workstation Player 个人使用免费&lt;/p&gt;
&lt;h3 id=&#34;首先为什么是manjaro&#34;&gt;首先，为什么是Manjaro？&lt;/h3&gt;
&lt;p&gt;因为，大名鼎鼎的 Kali Linux 不提供 iso 下载了，官网只有一个种子文件，而且 tuna ustc 的镜像里也没有┑(￣Д ￣)┍&lt;/p&gt;
&lt;p&gt;（再说，里面那么多的工具，都有啥？干啥用？怎么用？我都不清楚啊 TAT&lt;/p&gt;
&lt;p&gt;Arch Linux 软件源我吹爆，为了能够快速建立就选 Manjaro 喽~&lt;/p&gt;
&lt;p&gt;Ubuntu 也不是不能选&amp;hellip;就是感觉有点&amp;hellip;丑&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;其次为什么是-xfce&#34;&gt;其次，为什么是 Xfce？&lt;/h3&gt;
&lt;p&gt;毕竟是装在虚拟机里嘛~&lt;/p&gt;
&lt;p&gt;既然有宿主了，界面也就不那么重要了。&lt;/p&gt;
&lt;p&gt;Xfce 内存占用小，跑得快，默认配置美观&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;安装后要敲的指令&#34;&gt;安装后要敲的指令&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#卸载 Open VMware Tools
sudo pacman -R open-vm-tools
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后注销，登陆到 root 用户。&lt;/p&gt;
&lt;p&gt;因为要用的工具大多数都需要 root，Kali Linux也是这么搞得。&lt;/p&gt;
&lt;p&gt;安装  VMware Tools&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#切换中国源
pacman-mirrors -c China
#安装 Vim
pacman -S vim
#添加 [archlinuxcn]
vim /etc/pacman.conf

[archlinuxcn]
SigLevel = Optional TrustedOnly
Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch

#更新软件源
pacman -Syy &amp;amp;&amp;amp; sudo pacman -S archlinuxcn-keyring
#安装 oh my zsh
sh -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&amp;quot;

#开机自动登录到 root
vim /etc/lightdm/lightdm.conf
#修改下面这一行
autologin-user=root
#把 root 添加到 autologin 组中
# groupadd autologin
gpasswd -a root autologin

#重启
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;环境搭建&#34;&gt;环境搭建&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;li&gt;netcat&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>你好！HUGO</title>
        <link>https://blog.frostmiku.com/archives/3/</link>
        <pubDate>Tue, 05 Nov 2019 18:39:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/3/</guid>
        <description>&lt;p&gt;前不久把自己的VPS释放掉了，换回静态Blog了&amp;hellip;&lt;/p&gt;
&lt;p&gt;Hugo挺好用的，由Golang开发，官方提供预编译的二进制文件。&lt;/p&gt;
&lt;p&gt;无需安装任何环境，开袋即食。&lt;/p&gt;
&lt;p&gt;附上一个发布脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hugo
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./public
git add .
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;updated&amp;#34;&lt;/span&gt;
git push
pause
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数学符号测试：
$$
\frac{\theta}{\lambda}
$$&lt;/p&gt;
&lt;p&gt;插入一个不明觉厉的实时气象地球：&lt;/p&gt;
&lt;iframe src=&#34;https://earth.nullschool.net/zh-cn/#current/wind/surface/level/orthographic=-250.03,1.27,325&#34; width=&#34;100%&#34; height=&#34;650px;&#34; scrolling=&#34;no&#34; style=&#34;border:0px;&#34;&gt;&lt;/iframe&gt;</description>
        </item>
        <item>
        <title>COSPLAY 与 文本分类</title>
        <link>https://blog.frostmiku.com/archives/41/</link>
        <pubDate>Sun, 07 Oct 2018 14:04:32 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/41/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;“幸福的家庭都是相似的，不幸的家庭各有各的不幸”  &amp;mdash; 托尔斯泰 《安娜·卡列尼娜》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个显然的事实，计算机只能做计算，数值计算，它无法理解文本的内涵，但却可以计算文本用词的相似度。&lt;/p&gt;
&lt;p&gt;一篇文章里如果反复出现 “贸易逆差、汇率、贬值” 等词汇，那它大概率就是一篇金融方面的文章。&lt;/p&gt;
&lt;p&gt;而如果经常出现 “李白、杜甫、王维、&lt;del&gt;江泽&lt;/del&gt;林则徐” 那它应该是一篇诗歌方面的文章。&lt;/p&gt;
&lt;p&gt;所以，我们可以使用一个 &lt;strong&gt;数组&lt;/strong&gt; 来储存这些关键词出现的频率，这样一篇文章就被转换成了数字，计算机就能算一算这篇文章是在讲什么了。&lt;/p&gt;
&lt;p&gt;那么，怎么计算呢.jpg&lt;/p&gt;
&lt;p&gt;看我cosplay&lt;/p&gt;
&lt;p&gt;首先，我们知道：&lt;/p&gt;
&lt;p&gt;$$
\cos A=\dfrac {\langle a,b\rangle }{\left| a\right| \cdot \left| b\right| }
$$&lt;/p&gt;
&lt;p&gt;我们将这个储存词频的 &lt;strong&gt;数组&lt;/strong&gt; 看成一个 &lt;strong&gt;n 维向量&lt;/strong&gt; ，那么任意两篇文章的主题相关性就可以用向量间的余弦角来表示。&lt;/p&gt;
&lt;p&gt;当两向量垂直时&lt;/p&gt;
&lt;p&gt;$$
\cos A=0
$$&lt;/p&gt;
&lt;p&gt;两文本毫不相干。&lt;/p&gt;
&lt;p&gt;当两向量重合时&lt;/p&gt;
&lt;p&gt;$$
\cos A=1
$$&lt;/p&gt;
&lt;p&gt;两文本完全相同。&lt;/p&gt;
&lt;p&gt;基于这个原理我们可以设计出一个很简单的文本分类器，我们可以称呼它为&amp;hellip;&lt;del&gt;coser！&lt;/del&gt; 余弦相似性分类器。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>一个ACM蒟蒻的掉坑手册</title>
        <link>https://blog.frostmiku.com/archives/40/</link>
        <pubDate>Sun, 08 Oct 2017 14:00:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/40/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;如何控制每两个数之间有空格，而最后一个数之后没有空格？解决方法之一是：第一个数之前不加空格，而其后每个数之前加空格。而通过一个标识变量可以判断出是否是第一个数。&lt;/li&gt;
&lt;li&gt;初做多实例测试，要注意变量赋初值的位置。&lt;/li&gt;
&lt;li&gt;流可以加速，方法是关闭和stdio的同步，即调用&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;n&#34;&gt;ios&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sync_with_stdio&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;未指定输入量的输入框架&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EOF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){}&lt;/span&gt; 
&lt;span class=&#34;c1&#34;&gt;//或 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;能写成函数尽量写成函数，解耦、复用、易于定位错误，不要把 main() 写的又臭又长，出错了改都不好改。&lt;/li&gt;
&lt;li&gt;memset函数可以初始化数组。这条命令这在你已经修改了数组之后又想将它重置为全0特别有用（然鹅它是操作字节，也就初始为0/-1比较有用）。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;CPP int&amp;amp;string互相转换&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sstream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;stringstream&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ss&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ss&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;使用C语言sscanf()函数将string/char转换成int（或其他类型）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;123456789&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sscanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c_str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;重定向：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;n&#34;&gt;freopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;test.in&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;freopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;test.out&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//不能用在C++里。
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;main函数可以递归 调用自身：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt;&lt;span class=&#34;cpf&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%lf&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EOF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%.5f&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;long double类型使用%Lf占位.&lt;/li&gt;
&lt;li&gt;一次读取一行&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)){}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;这个语句的执行过程是这样的：先调用getline()函数，getline()将istream cin中的内容读取一行（你输入的是hello
world)，保存进string
s中，而getline()的返回值就是cin。也就是说，这个循环的判定条件是while(cin)，cin是怎么转化为bool类型进行条件判断的呢？这个判定实际上隐式调用了
!cin.fail()，而fail()这个成员函数被定义在ios_base类里面（这是istream的基类basic_ios的基类）。那么调用fail()返回的是什么？是cin的状态。cin的状态是由4个标志位指示的（关于stream的标志的内容实际上就可以在C++
Primer中找到），分别是badbit（表示流已经崩溃），failbit（表示IO操作失败），eofbit，goodbit。当badbit或者failbit被置位时，fail()会返回true，!fail()结果为false。当遇到文件末端时，eofbit和failbit都会被置位，因此只有碰到Ctrl+Z（Windows下输入即等同文件末端eof），while()条件不再满足，退出。
链接：https://www.zhihu.com/question/27859723/answer/38385260&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;字符串所有字母转换为大写&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;n&#34;&gt;transform&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toupper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;反转string&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;n&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>LibVLC研究笔记</title>
        <link>https://blog.frostmiku.com/archives/370/</link>
        <pubDate>Wed, 04 May 2016 23:00:34 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/370/</guid>
        <description>&lt;h2 id=&#34;什么是vlc&#34;&gt;什么是VLC&lt;/h2&gt;
&lt;p&gt;VLC多媒体播放器（最初命名为VideoLAN客户端）是VideoLAN计划的多媒体播放器。它支持众多音频与视频解码器及文件格式，并支持DVD影音光盘，VCD影音光盘及各类流式协议。它也能作为unicast或 multicast的流式服务器在IPv4或 IPv6的高速网络连接下使用。它融合了FFmpeg计划的解码器与libdvdcss程序库使其有播放多媒体文件及加密DVD影碟的功能。&lt;/p&gt;
&lt;h2 id=&#34;什么是libvlc&#34;&gt;什么是LibVLC&lt;/h2&gt;
&lt;p&gt;&lt;span id=&#34;result_box&#34; class=&#34;short_text&#34; lang=&#34;zh-CN&#34;&gt;&lt;span class=&#34;&#34;&gt;LibVLC&lt;/span&gt;&lt;span class=&#34;&#34;&gt;是&lt;/span&gt;&lt;span class=&#34;&#34;&gt;VLC媒体播放器&lt;/span&gt;的外部&lt;span class=&#34;&#34;&gt;编程接口。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://frostmiku.fcteam.net/wp-content/uploads/2016/05/2016050414265530.png&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;http://frostmiku.fcteam.net/wp-content/uploads/2016/05/2016050414265530.png&#34; alt=&#34;libvlc&#34;  /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;如何获取vlc的sdk&#34;&gt;如何获取VLC的SDK&lt;/h2&gt;
&lt;p&gt;VLC开发所需的库文件可以有3种获取方法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1. 自行编译&lt;/p&gt;
&lt;p&gt;2. 直接从安装目录里面拷贝出来&lt;/p&gt;
&lt;p&gt;3.从官方FTP服务器上下载（见相关链接5）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;开发vlc所需的文件的位置&#34;&gt; 开发VLC所需的文件的位置&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;1. 动态链接库*.dll：安装目录下的libvlc.dll，libvlccore.dll以及plugins目录下的所有文件。&lt;/p&gt;
&lt;p&gt;2. 静态链接库*.lib：安装目录/sdk/lib（2.1.0以后移除）（如没有libvlc.lib与libvlccore.lib请参考相关链接2从dll生成）&lt;/p&gt;
&lt;p&gt;3. 头文件：安装目录/sdk/include
[v_error]使用官方的，而非自己手动生成lib（相关链接2）将在Release下抛错[/v_error]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;1.自行在vs中设置include和lib的路径（如上）
2.复制libvlc.dll, &lt;wbr /&gt;libvlccore.dll,plugins目录到工程debug目录,如果是release需要复制到release目录
3.如想发布供他人使用请静态编译：工程属性， C/C++ ， 运行时库选择/MT&lt;/p&gt;
&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;
&lt;p&gt;基于libvlc的播放器Dome网上一搜一大把，这里给出两个有代表性的&lt;/p&gt;
&lt;p&gt;官方WIKI：&lt;/p&gt;
&lt;pre class=&#34;prettyprint linenums&#34;&gt;
#include 
 #include 
 #include &amp;lt;vlc/vlc.h&amp;gt;

 int main(int argc, char* argv[])
 {
     libvlc_instance_t * inst;
     libvlc_media_player_t *mp;
     libvlc_media_t *m;

     /* Load the VLC engine */
     inst = libvlc_new (0, NULL);

     /* Create a new item */
     m = libvlc_media_new_location (inst, &#34;http://mycool.movie.com/test.mov&#34;);
     //m = libvlc_media_new_path (inst, &#34;/path/to/test.mov&#34;);

     /* Create a media player playing environement */
     mp = libvlc_media_player_new_from_media (m);

     /* No need to keep the media now */
     libvlc_media_release (m);

 #if 0
     /* This is a non working code that show how to hooks into a window,
      * if we have a window around */
      libvlc_media_player_set_xwindow (mp, xid);
     /* or on windows */
      libvlc_media_player_set_hwnd (mp, hwnd);
     /* or on mac os */
      libvlc_media_player_set_nsobject (mp, view);
  #endif

     /* play the media_player */
     libvlc_media_player_play (mp);

     sleep (10); /* Let it play a bit */

     /* Stop playing */
     libvlc_media_player_stop (mp);

     /* Free the media_player */
     libvlc_media_player_release (mp);

     libvlc_release (inst);

     return 0;
 }
&lt;/pre&gt;
&lt;p&gt;来自百度的精简版，只留下了主要代码（出处不详，望告知）&lt;/p&gt;
&lt;pre class=&#34;prettyprint linenums&#34;&gt;#include 
#include 

#include &#34;vlc/vlc.h&#34;
#pragma comment(lib, &#34;libvlc.lib&#34;)
#pragma comment(lib, &#34;libvlccore.lib&#34;)

int main(int argc, char* argv[])
{
    libvlc_instance_t * inst;
    libvlc_media_player_t *mp;
    libvlc_media_t *m;

    inst = libvlc_new (0, NULL);        /* Load the VLC engine */   
    m = libvlc_media_new_path (inst, &#34;D:\\music\\amani.wma&#34;);  // 必须为英文路径  
    mp = libvlc_media_player_new_from_media (m);    /* Create a media player playing environement */    
    libvlc_media_release (m);           /* No need to keep the media now */

    // 播放文件
    libvlc_media_player_play (mp);      /* play the media_player */   
    Sleep (100 * 1000);                 /* Let it play a bit */

    libvlc_media_player_stop (mp);      /* Stop playing */   
    libvlc_media_player_release (mp);   /* Free the media_player */
    libvlc_release (inst);
    return 0;
}
&lt;/pre&gt;
&lt;h2 id=&#34;libvlc_media_new_path和libvlc_media_new_location的区别&#34;&gt;libvlc_media_new_path()和libvlc_media_new_location()的区别&lt;/h2&gt;
&lt;p&gt;libvlc_media_new_path()用于打开文件，而libvlc_media_new_location()用于打开协议&lt;/p&gt;
&lt;p&gt;传递给libvlc_media_new_path()的参数就是文件路径（相对路径或绝对路径）&lt;/p&gt;
&lt;p&gt;传递给libvlc_media_new_location()的参数就是协议地址（如“udp://”“http://”）&lt;/p&gt;
&lt;p&gt;需要注意的是libvlc_media_new_location()也可以打开文件，但是必须在文件路径前面加上“file:///”，举个栗子&lt;/p&gt;
&lt;pre class=&#34;prettyprint linenums&#34;&gt;libvlc_media_new_location (inst, &#34;file:///E:\\test.avi&#34;);  
&lt;/pre&gt;
&lt;p&gt;VLC还支持很多特有的协议，比如“screen://”协议可以进行屏幕录制，具体可参考官方WIKI&lt;/p&gt;
&lt;h2 id=&#34;疑难杂症&#34;&gt;疑难杂症&lt;/h2&gt;
&lt;h3 id=&#34;中文乱码&#34;&gt;中文乱码&lt;/h3&gt;
&lt;p&gt;VLC使用的是UTF-8，因此将unicode转码为UTF-8即可解决&lt;/p&gt;
&lt;h3 id=&#34;在release下抛错&#34;&gt;在Release下抛错&lt;/h3&gt;
&lt;p&gt;请勿使用官方的lib，自己手动生成lib（相关链接2）&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;相关链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.videolan.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.videolan.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.videolan.org/developers/vlc/doc/doxygen/html/group__libvlc.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.videolan.org/developers/vlc/doc/doxygen/html/group__libvlc.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.videolan.org/GenerateLibFromDll/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.videolan.org/GenerateLibFromDll/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://download.videolan.org/pub/videolan/vlc/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://download.videolan.org/pub/videolan/vlc/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;ftp://ftp.videolan.org/pub/videolan/&#34; &gt;ftp://ftp.videolan.org/pub/videolan/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Minecraft的地形生成算法相关</title>
        <link>https://blog.frostmiku.com/archives/2/</link>
        <pubDate>Fri, 25 Dec 2015 09:12:09 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/2/</guid>
        <description>&lt;p&gt;&lt;span style=&#34;text-decoration: underline;&#34;&gt;&lt;span style=&#34;color: #ff0000; text-decoration: underline;&#34;&gt;Terrain generation, Part 1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I’ve been promising to write a technical post on Minecraft for a while, but never really got around to doing so. I’m on a tiny airplane now, though, with nowhere to run, so here we go!&lt;/p&gt;
&lt;p&gt;One of the most complex parts of Minecraft is the terrain generation. When I changed the game over from being just single zones of a map to an infinite map, the terrain generation got a whole lot more complicated, as terrain needs to get generated on the fly as the player explores, and it has to be the same no matter what direction the player approaches it from.&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color: #ff6600;&#34;&gt;1) How infinite is it?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;First of all, let me clarify some things about the “infinite” maps: They’re not infinite, but there’s no hard limit either. It’ll just get buggier and buggier the further out you are. Terrain is generated, saved and loaded, and (kind of) rendered in chunks of 16&lt;em&gt;16&lt;/em&gt;128 blocks. These chunks have an offset value that is a 32 bit integer roughly in the range negative two billion to positive two billion. If you go outside that range (about 25% of the distance from where you are now to the sun), loading and saving chunks will start overwriting old chunks. At a 16/th of that distance, things that use integers for block positions, such as using items and pathfinding, will start overflowing and acting weird.&lt;/p&gt;
&lt;p&gt;Those are the two “hard” limits.&lt;/p&gt;
&lt;p&gt;Most other things, like the terrain generation seeds and entity locations use 64 bit doubles for locations, and they do much subtler things. For example, at extreme distances, the player may move slower than near the center of the world, due to rounding errors (the position has a huge mantissa, the movement delta has a tiny, so it gets cut off faster). The terrain generator can also start generating weird structures, such as huge blocks of solid material, but I haven’t seen this lately nor examined exactly what behavior causes it to happen. One major problem at long distances is that the physics starts bugging out, so the player can randomly fall into ground blocks or get stuck while walking along a wall.&lt;/p&gt;
&lt;p&gt;Many of these problems can be solved by changing the math into a local model centered around the player so the numbers all have vaguely the same magnitude. For rendering, Minecraft already uses local coordinates within the block and offset the block position relative to the player to give the impression of the player moving. This is mostly due to OpengGL using 32 bit floats for positions, but also because the rounding errors are extremely visible when displayed on a screen.
We’re probably not going to fix these bugs until it becomes common for players to experience them while playing legitimately. My gut feeling is that nobody ever has so far, and nobody will. Walking that far will take a very long time. Besides, the bugs add mystery and charisma to the Far Lands.&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color: #ff6600;&#34;&gt;2) Isn’t that terrain shape pretty awesome?&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In the very earliest version of Minecraft, I used a 2D Perlin noise heightmap to set the shape of the world. Or, rather, I used quite a few of them. One for overall elevation, one for terrain roughness, and one for local detail. For each column of blocks, the height was (elevation + (roughness&lt;em&gt;detail))&lt;em&gt;64+64. Both elevation and roughness were smooth, large scale noises, and detail was a more intricate one. This method had the great advantage of being very fast as there’s just 16&lt;/em&gt;16&lt;/em&gt;(noiseNum) samples per chunk to generate, but the disadvantage of being rather dull. Specifically, there’s no way for this method to generate any overhangs.&lt;/p&gt;
&lt;p&gt;So I switched the system over into a similar system based off 3D Perlin noise. Instead of sampling the “ground height”, I treated the noise value as the “density”, where anything lower than 0 would be air, and anything higher than or equal to 0 would be ground. To make sure the bottom layer is solid and the top isn’t, I just add the height (offset by the water level) to the sampled result.
Unfortunately, I immediately ran into both performance issues and playability issues. Performance issues because of the huge amount of sampling needed to be done, and playability issues because there were no flat areas or smooth hills. The solution to both problems turned out to be just sampling at a lower resolution (scaled 8x along the horizontals, 4x along the vertical) and doing a linear interpolation. Suddenly, the game had flat areas, smooth hills, and also most single floating blocks were gone.&lt;/p&gt;
&lt;p&gt;The exact formula I use is a bit involved (and secret!), but it evolved slowly over time as I worked on the game. It still uses the 2D elevation and noisyness maps, though.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>一个简单的密码生成算法</title>
        <link>https://blog.frostmiku.com/archives/39/</link>
        <pubDate>Mon, 08 Jun 2015 14:00:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/39/</guid>
        <description>&lt;h2 id=&#34;这是个啥&#34;&gt;这是个啥？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;答： 是小时候写的垃圾，现已被&lt;a class=&#34;link&#34; href=&#34;https://blog.frostmiku.com/archives/33/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt;取代 2021.9.22&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现如今，每个人都有不少网站的帐号，为每一个帐号设置不同的密码会增加大脑的记忆负担，而使用相同的密码则会引发安全问题。&lt;/p&gt;
&lt;p&gt;Simple password generator，是一个简单的密码生成器，但这绝不表示生成的密码是简单密码（弱口令）。通过本生成器可使用户仅需记住一个密码（即所有密码的公匙），来通过算法动态生成实际密码，每次密码皆为动态生成，由公匙确保生成密码的一致性，密码数据不做任何保持，具有较高的安全性。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;如何使用&#34;&gt;如何使用&lt;/h2&gt;
&lt;p&gt;直接上图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://o7kncnou7.bkt.clouddn.com/2017-12-28%2017-24-17%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;启动后输入储存在&lt;strong&gt;大脑&lt;/strong&gt; 中的密码，然后根据不同网站输入不同的key，生成器会实时计算出唯一的值来作为实际密码，密码不做任何保存处理。&lt;/p&gt;
&lt;p&gt;输入 exit 退出程序。&lt;/p&gt;
&lt;h2 id=&#34;原理&#34;&gt;原理&lt;/h2&gt;
&lt;p&gt;其实就是随机数种子的应用= =|||&lt;/p&gt;
&lt;p&gt;还有个缺点，前三（四）位固定是大小写字母、数字（符号）搭配&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;源码&#34;&gt;源码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;abcdefghijklmnopqrstuvwxyz&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;!%@#^,./?*;:_&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0123456789&amp;#34;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;            
    &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;    
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;choice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getpwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;havesymbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;havesymbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            	&lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;symbols&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legth&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;upper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            	&lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getstr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;passworld&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;请输入公匙：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;请输入关键字（或输入 exit 退出）：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;exit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    	&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;密码为： &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    	&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>更早之前的文章</title>
        <link>https://blog.frostmiku.com/archives/1/</link>
        <pubDate>Sat, 08 Mar 2014 14:00:00 +0800</pubDate>
        
        <guid>https://blog.frostmiku.com/archives/1/</guid>
        <description>&lt;h1 id=&#34;404-page-not-found&#34;&gt;404 Page Not Found&lt;/h1&gt;
&lt;p&gt;这里什么都没有。 
旧时代的文章随着一次次的事故烟消云散了&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;虽然我有备份&lt;/del&gt;&lt;br&gt;
备份中最早的文章为&lt;br&gt;
&lt;code&gt;【Minecraft】MOD开发教程 1.配置工作环境！&lt;/code&gt;&lt;br&gt;
不，比这个更早，但是一篇灌水的东西（&lt;/p&gt;
&lt;p&gt;&lt;code&gt;2014.03.08 CST&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
